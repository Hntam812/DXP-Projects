{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{"factoryName":{"type":"string","metadata":"Data Factory name"},"Snowflake_SandboxUnited":{"type":"string"},"AzureBlobStorageUat2United":{"type":"string"},"SqlServer_SandboxUnited_Offer":{"type":"string"},"SqlServer_SandboxUnited_Staging":{"type":"string"}},"variables":{"factoryId":"[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"},"resources":[{"name":"[concat(parameters('factoryName'), '/sandboxunited_pipeline_import_2_from_staging2main_sf')]","type":"Microsoft.DataFactory/factories/pipelines","apiVersion":"2018-06-01","properties":{"activities":[{"name":"insert into main table","type":"Script","dependsOn":[{"activity":"Set import Date","dependencyConditions":["Succeeded"]},{"activity":"Set correlationId","dependencyConditions":["Succeeded"]}],"policy":{"timeout":"0.12:00:00","retry":0,"retryIntervalInSeconds":30,"secureOutput":false,"secureInput":false},"userProperties":[],"linkedServiceName":{"referenceName":"[parameters('Snowflake_SandboxUnited')]","type":"LinkedServiceReference"},"typeProperties":{"scripts":[{"type":"NonQuery","text":{"value":"set CurrentDate = '@{variables('Import_date')}';\nset CorrelationId = '@{variables('CorrelationId')}';\n\nbegin\n    ------------------------------------------------------------------------------------------\n    --- Campaign\n    ------------------------------------------------------------------------------------------\n    if (exists (select top 1 1 from Rs_Schema.StagingCampaign)) then\n\n        insert into Rs_Schema.WeeklyImportLog(JobName, Action, LogTime,Date, CorrelationId)\n        values ('ImportFromStaging', 'Update IsDeleted Campaign', GetDate(), $CurrentDate, $CorrelationId);\n        \n        update RS_SCHEMA.Campaign set IsDeleted = 1\n        from RS_SCHEMA.StagingCampaign staging \n        where Campaign.CampaignCode = staging.CAMPAIGN_CODE (+)\n        and staging.CAMPAIGN_CODE is null and Campaign.CreatedBy ='Weekly Import' and Campaign.IsDeleted = 0;\n\n        \n        insert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\n        values ('ImportFromStaging', 'Update & insert Campaign', GetDate(), $CurrentDate, $CorrelationId);\n        \n        merge into RS_SCHEMA.Campaign \n        using RS_SCHEMA.StagingCampaign on StagingCampaign.CAMPAIGN_CODE = Campaign.CampaignCode \n        when matched then update\n            set Name = StagingCampaign.CAMPAIGN_NAME\n            , Description = StagingCampaign.CAMPAIGN_DESC\n            , StartDate = StagingCampaign.CAMPAIGN_START_DATE\n            , EndDate = StagingCampaign.CAMPAIGN_END_DATE\n            , PreStartDate = StagingCampaign.PRE_CAMPAIGN_START_DATE\n            , PreEndDate = StagingCampaign.PRE_CAMPAIGN_END_DATE\n            , ModifiedDate = GetDate()\n            , ModifiedBy = 'Weekly Import'\n            , IsDeleted = 0 \n        when not matched then insert (Id, Name, Description, CampaignCode, StartDate, EndDate, PreStartDate, PreEndDate, CreatedDate, CreatedBy, IsDeleted)\n        values (\n            UUID_STRING(),\n            StagingCampaign.CAMPAIGN_NAME,\n            StagingCampaign.CAMPAIGN_DESC,\n            StagingCampaign.CAMPAIGN_CODE,\n            StagingCampaign.CAMPAIGN_START_DATE,\n            StagingCampaign.CAMPAIGN_END_DATE,\n            StagingCampaign.PRE_CAMPAIGN_START_DATE,\n            StagingCampaign.PRE_CAMPAIGN_END_DATE,\n            GetDate(),\n            'Weekly Import',\n            0\n        );\n    end if;\n\n    ------------------------------------------------------------------------------------------\n    --- Promotion\n    ------------------------------------------------------------------------------------------\n    if (exists (select top 1 1 from Rs_Schema.StagingPromotion)) then\n        insert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\n        values ('ImportFromStaging', 'Update IsDeleted Promotion', GetDate(),$CurrentDate,$CorrelationId);\n\n        update RS_SCHEMA.Promotion\n        set IsDeleted = 1 \n        where CreatedBy ='Weekly Import' and Promotion.IsDeleted = 0;\n\n        insert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\n        values ('ImportFromStaging', 'Update & insert Promotion', GetDate(), $CurrentDate, $CorrelationId);\n\n        merge into RS_SCHEMA.Promotion \n        using (\n            select\n                StagingPromotion.*, \n                Campaign.Id as CampaignId \n            from RS_SCHEMA.StagingPromotion \n                join RS_SCHEMA.Campaign on Campaign.CampaignCode = StagingPromotion.CAMPAIGN_CODE\n        ) StagingPromotion \n            on StagingPromotion.CampaignId = Promotion.CampaignId \n            and StagingPromotion.PROMOTION_CODE = Promotion.PromotionCode\n        when matched then update \n                set Name = StagingPromotion.PROMOTION_NAME\n                , Description = StagingPromotion.PROMOTION_DESC\n                , StartDate =StagingPromotion.PROMO_START_DATE\n                , EndDate = StagingPromotion.PROMO_END_DATE\n                , PreStartDate = StagingPromotion.PRE_PROMO_START_DATE\n                , PreEndDate = StagingPromotion.PRE_PROMO_END_DATE\n                , ModifiedDate = GetDate()\n                , ModifiedBy = 'Weekly Import'\n                , IsDeleted = 0\n            when not matched then \n                insert (Id,Name,Description,PromotionCode,StartDate,EndDate,PreStartDate,PreEndDate,CampaignCode,CampaignId,CreatedDate,CreatedBy,IsDeleted)\n                values (\n                    UUID_STRING()\n                , StagingPromotion.PROMOTION_NAME\n                , StagingPromotion.PROMOTION_DESC\n                , StagingPromotion.PROMOTION_CODE\n                , StagingPromotion.PROMO_START_DATE\n                , StagingPromotion.PROMO_END_DATE\n                , StagingPromotion.PRE_PROMO_START_DATE\n                , StagingPromotion.PRE_PROMO_END_DATE\n                , StagingPromotion.CAMPAIGN_CODE\n                , StagingPromotion.CampaignId\n                , GetDate()\n                , 'Weekly Import'\n                , 0\n                );\n    end if;\n\n    ------------------------------------------------------------------------------------------\n    --- Product\n    ------------------------------------------------------------------------------------------ \n    if (exists (select top 1 1 from Rs_Schema.StagingProduct)) then\n\n        insert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\n        values ('ImportFromStaging', 'Update IsDeleted Product', GetDate(), $CurrentDate, $CorrelationId);\n\n        update RS_SCHEMA.Product set IsDeleted = 1;\n\n        insert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\n        values ('ImportFromStaging', 'Update & insert Product', GetDate(), $CurrentDate, $CorrelationId);\n        \n        merge into RS_SCHEMA.Product \n        using RS_SCHEMA.StagingProduct on Product.ProductCode = StagingProduct.Product_Code\n        when matched then update set\n            Description = StagingProduct.Product_short_desc\n            ,FullDescription = StagingProduct.Product_Description\n            ,PrimaryUPC = StagingProduct.Prod_Attribute1\n            ,Movement = StagingProduct.Prod_Attribute24\n            ,DepartmentCode1 = StagingProduct.PROD_ATTRIBUTE2\n            ,DepartmentCode2 = StagingProduct.PROD_ATTRIBUTE4 \n            ,DepartmentCode3 = StagingProduct.PROD_ATTRIBUTE6\n            ,DepartmentName1 = StagingProduct.PROD_ATTRIBUTE3\n            ,DepartmentName2 = StagingProduct.PROD_ATTRIBUTE5 \n            ,DepartmentName3 = StagingProduct.PROD_ATTRIBUTE7\n            ,IsDeleted = 0 \n        when not matched then insert \n            (Id, ProductCode, PrimaryUPC, Description, FullDescription, Movement, DepartmentCode1, DepartmentCode2, DepartmentCode3, DepartmentName1, DepartmentName2, DepartmentName3, IsDeleted)\n        values\n        (\n            UUID_STRING(),\n            StagingProduct.PRODUCT_CODE,\n            StagingProduct.Prod_Attribute1,\n            StagingProduct.Product_short_desc,\n            StagingProduct.Product_Description,\n            StagingProduct.Prod_Attribute24 ,\n            StagingProduct.PROD_ATTRIBUTE2,\n            StagingProduct.PROD_ATTRIBUTE4,\n            StagingProduct.PROD_ATTRIBUTE6 ,\n            StagingProduct.PROD_ATTRIBUTE3,\n            StagingProduct.PROD_ATTRIBUTE5,\n            StagingProduct.PROD_ATTRIBUTE7,\n            0\n        );\n                                    \n    end if;\n    ------------------------------------------------------------------------------------------\n    --- Offer\n    ------------------------------------------------------------------------------------------\n    if (exists (select top 1 1 from Rs_Schema.StagingOffer)) then\n\n    insert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\n        values ('ImportFromStaging','Update IsDeleted Offer',GetDate(),$CurrentDate,$CorrelationId);\n\n        update RS_SCHEMA.Offer set IsDeleted = 1\n        from RS_SCHEMA.StagingOffer \n        where  Offer.OfferCode = StagingOffer.OFFER_CODE (+)\n        and StagingOffer.OFFER_CODE IS NULL and Offer.CreatedBy ='Weekly Import' and Offer.IsDeleted = 0;\n\n        merge into RS_SCHEMA.OfferExt \n        using (select StagingOffer.*, Offer.id as OfferId from RS_SCHEMA.StagingOffer join RS_SCHEMA.Offer \n                        on Offer.OfferCode = StagingOffer.OFFER_CODE AND (Offer.HashColumn is null OR StagingOffer.HashColumn <> Offer.HashColumn)) StagingOffer\n            on StagingOffer.OfferId = OfferExt.OfferId\n        when matched then update \n            set EffectiveStartDate = TRY_TO_TIMESTAMP_NTZ(StagingOffer.OFFER_ST_DATE),\n                EffectiveEndDate = TRY_TO_TIMESTAMP_NTZ(StagingOffer.OFFER_END_DATE),\n                OfferAutoLoad = (case when StagingOffer.OFFER_ATTRIBUTE12 = 'Y' then 1 when StagingOffer.OFFER_ATTRIBUTE12 = 'N' then 0 else NULL end),\n                OfferValueMisc = (case\n                                    when StagingOffer.OFFER_ATTRIBUTE11 is not null and TRY_TO_NUMBER(StagingOffer.OFFER_ATTRIBUTE11) is not null and StagingOffer.SOURCE = 'L' then cast(TRY_TO_NUMBER(StagingOffer.OFFER_ATTRIBUTE11) AS NUMERIC(10,4))\n                                    when (StagingOffer.OFFER_ATTRIBUTE11 is null or TRY_TO_NUMBER(StagingOffer.OFFER_ATTRIBUTE11) is null) and StagingOffer.SOURCE = 'L' then NULL\n                                    else NULL\n                                end);\n        \n        insert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\n        values ('ImportFromStaging','Update & insert Offer',GetDate(),$CurrentDate,$CorrelationId);\n        \n        merge into RS_SCHEMA.Offer \n        using RS_SCHEMA.StagingOffer on Offer.OfferCode = StagingOffer.OFFER_CODE\n        when matched AND (Offer.HashColumn is null OR StagingOffer.HashColumn <> Offer.HashColumn OR Offer.IsDeleted = 1) then update set \n                    Name = StagingOffer.OFFER_TITLE\n                    ,Description = StagingOffer.OFFER_DESC\n                    ,FullDescription = null\n                    -- ,StartDate = IFF(StagingOffer.OFFER_ATTRIBUTE8 is null, OFFER_ST_DATE, StagingOffer.OFFER_ATTRIBUTE8) \n                    ,StartDate = TRY_TO_TIMESTAMP_NTZ(COALESCE(StagingOffer.OFFER_ATTRIBUTE8, OFFER_ST_DATE, ''))\n                    -- ,EndDate = IFF(StagingOffer.OFFER_ATTRIBUTE9 is null, OFFER_END_DATE, StagingOffer.OFFER_ATTRIBUTE9) \n                    ,EndDate = TRY_TO_TIMESTAMP_NTZ(COALESCE(StagingOffer.OFFER_ATTRIBUTE9, OFFER_END_DATE, ''))\n                    ,IsActive = COALESCE(StagingOffer.ACTIVE, '0')\n                    ,ModifiedDate = GetDate()\n                    ,ModifiedBy = 'Weekly Import'\n                    ,OfferType =  case\n                                    when StagingOffer.OFFER_SCOPE = 'MASS' then 0 \n                                    when StagingOffer.OFFER_SCOPE = 'TARGETED-STORE' then 1\n                                    when StagingOffer.OFFER_SCOPE = 'TARGETED-LIST' then 2\n                                    when StagingOffer.OFFER_SCOPE = 'TARGETED-PROGRAM' then 3\n                                    else 0\n                                end\n                    ,Size =  StagingOffer.OFFER_ATTRIBUTE2\n                    ,DiscountPricing = case when StagingOffer.SOURCE = 'U' then StagingOffer.OFFER_ATTRIBUTE15 else StagingOffer.OFFER_ATTRIBUTE1 end\n                    ,HashColumn = StagingOffer.HashColumn\n                    ,Disclaimer = StagingOffer.OFFER_ATTRIBUTE3\n                    ,MemberAccount = StagingOffer.OFFER_ATTRIBUTE4\n                    ,OfferSegment = StagingOffer.OFFER_ATTRIBUTE5\n                    ,MemberAccountLoadQuantity = OFFER_ATTRIBUTE6\n                    ,ImageUrl = StagingOffer.OFFER_IMG_URL\n                    ,Provider = case when StagingOffer.SOURCE = 'U' then 0 else 1 end\n                    ,IsDeleted = 0\n                    ,CustomerOfferFileId = null\n                    ,CustomerOfferFileStatus = null\n        when not matched then \n            insert            \n                    (Id,OfferCode,Name,Description,FullDescription,StartDate,EndDate,IsActive,IsDeleted,CreatedDate,CreatedBy,OfferType\n                    ,DiscountPricing,Size,Disclaimer,HashColumn,OfferSegment,MemberAccount,MemberAccountLoadQuantity,ImageUrl,Provider)\n            values (UUID_STRING()\n                    ,StagingOffer.OFFER_CODE\n                    ,StagingOffer.OFFER_TITLE\n                    ,StagingOffer.OFFER_DESC\n                    ,Null\n                    -- ,IFF(StagingOffer.OFFER_ATTRIBUTE8 is null, OFFER_ST_DATE, StagingOffer.OFFER_ATTRIBUTE8) \n                    -- ,IFF(StagingOffer.OFFER_ATTRIBUTE9 is null, OFFER_END_DATE, StagingOffer.OFFER_ATTRIBUTE9)\n                    ,TRY_TO_TIMESTAMP_NTZ(COALESCE(StagingOffer.OFFER_ATTRIBUTE8, OFFER_ST_DATE, ''))\n                    ,TRY_TO_TIMESTAMP_NTZ(COALESCE(StagingOffer.OFFER_ATTRIBUTE9, OFFER_END_DATE, ''))\n                    ,COALESCE(StagingOffer.ACTIVE, '0')\n                    ,0\n                    ,GetDate()\n                    ,'Weekly Import'\n                    ,case\n                        when StagingOffer.OFFER_SCOPE = 'MASS' then 0 \n                        when StagingOffer.OFFER_SCOPE = 'TARGETED-STORE' then 1\n                        when StagingOffer.OFFER_SCOPE = 'TARGETED-LIST' then 2\n                        when StagingOffer.OFFER_SCOPE = 'TARGETED-PROGRAM' then 3\n                        else 0\n                    end\n                    ,case when StagingOffer.SOURCE = 'U' then  StagingOffer.OFFER_ATTRIBUTE15 else StagingOffer.OFFER_ATTRIBUTE1 end\n                    ,OFFER_ATTRIBUTE2\n                    ,OFFER_ATTRIBUTE3\n                    ,StagingOffer.HashColumn\n                    ,OFFER_ATTRIBUTE5\n                    ,OFFER_ATTRIBUTE4\n                    ,OFFER_ATTRIBUTE6\n                    ,StagingOffer.OFFER_IMG_URL\n                    ,case when StagingOffer.SOURCE = 'U' then 0 else 1 end);\n\n        merge into RS_SCHEMA.OfferExt \n        using (\n            select StagingOffer.*, Offer.Id as OfferId \n            from RS_SCHEMA.Offer \n                join RS_SCHEMA.StagingOffer on Offer.OfferCode = StagingOffer.OFFER_CODE and (Offer.IsDeleted = 0 or Offer.IsDeleted is null)\n            ) StagingOffer\n            on StagingOffer.OfferId = OfferExt.OfferId\n        when not matched then insert\n        (OfferId, EffectiveStartDate, EffectiveEndDate, OfferAutoLoad, OfferValueMisc)\n        values (\n            StagingOffer.OfferId, \n            TRY_TO_TIMESTAMP_NTZ(StagingOffer.OFFER_ST_DATE), \n            TRY_TO_TIMESTAMP_NTZ(StagingOffer.OFFER_END_DATE), \n            case when StagingOffer.OFFER_ATTRIBUTE12 = 'Y' then 1 when StagingOffer.OFFER_ATTRIBUTE12 = 'N' then 0 else NULL end,\n            case\n                when StagingOffer.OFFER_ATTRIBUTE11 is not null and TRY_TO_NUMBER(StagingOffer.OFFER_ATTRIBUTE11) is not null and StagingOffer.SOURCE = 'L' then cast(TRY_TO_NUMBER(StagingOffer.OFFER_ATTRIBUTE11) AS NUMERIC(10,4))\n                when (StagingOffer.OFFER_ATTRIBUTE11 is null or TRY_TO_NUMBER(StagingOffer.OFFER_ATTRIBUTE11) is null) and StagingOffer.SOURCE = 'L' then NULL\n                else NULL\n            end);\n\n    end if;\n    ------------------------------------------------------------------------------------------\n    --- OfferStore\n    ------------------------------------------------------------------------------------------\n    if (exists (select top 1 1 from Rs_Schema.StagingOfferStore)) then\n\n        insert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\n        values ('ImportFromStaging','Delete OfferStore',GetDate(),$CurrentDate,$CorrelationId);\n        \n        delete from RS_SCHEMA.OfferStore \n        using (select Offer.id as OfferId, StagingOfferStore.STORE_CODE from RS_SCHEMA.StagingOfferStore \n            join RS_SCHEMA.Offer on Offer.OfferCode = StagingOfferStore.OFFER_CODE \n            where (Offer.IsDeleted = 0 or Offer.IsDeleted is null)\n            )  StagingOfferStore\n        where  \n            OfferStore.OFFERID = StagingOfferStore.OfferId (+)\n        and OfferStore.StoreCode = StagingOfferStore.STORE_CODE (+)\n        and  StagingOfferStore.STORE_CODE is null\n        and OfferStore.CreatedBy = 'Weekly Import';\n\n        insert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\n        values ('ImportFromStaging','insert OfferStore',GetDate(),$CurrentDate,$CorrelationId);\n        \n        merge into RS_SCHEMA.OfferStore \n        using (select distinct StagingOfferStore.STORE_CODE, Offer.Id as OfferId from RS_SCHEMA.StagingOfferStore  \n            join RS_SCHEMA.Offer on Offer.OfferCode = StagingOfferStore.OFFER_CODE  \n            where (Offer.IsDeleted = 0 or Offer.IsDeleted is null)\n            ) StagingOfferStore\n\n            on OfferStore.OfferId = StagingOfferStore.OfferId and OfferStore.StoreCode = StagingOfferStore.STORE_CODE\n        when not matched then insert \n        ( OfferId, StoreCode,CreatedDate,CreatedBy,IsDeleted)\n        values (StagingOfferStore.OfferId, StagingOfferStore.STORE_CODE, GetDate(), 'Weekly Import', 0);\n    end if;\n\n    ------------------------------------------------------------------------------------------\n    --- OfferProduct\n    ------------------------------------------------------------------------------------------\n    if (exists (select top 1 1 from Rs_Schema.StagingOfferProduct)) then\n\n        insert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\n        values ('ImportFromStaging','Delete OfferProduct',GetDate(),$CurrentDate,$CorrelationId);\n\n        delete from RS_SCHEMA.OfferProduct \n        using (\n            select Offer.id as OfferId, StagingOfferProduct.PRODUCT_CODE from RS_SCHEMA.Offer join RS_SCHEMA.StagingOfferProduct \n            on Offer.OfferCode = StagingOfferProduct.OFFER_CODE \n            where (Offer.IsDeleted = 0 or Offer.IsDeleted is null)\n        )  StagingOfferProduct\n        where  \n            OfferProduct.OFFERID = StagingOfferProduct.OfferId (+)\n        and OfferProduct.ProductCode = StagingOfferProduct.PRODUCT_CODE (+)\n        and  StagingOfferProduct.PRODUCT_CODE is null\n        and OfferProduct.CreatedBy = 'Weekly Import';\n        \n        insert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\n        values ('ImportFromStaging','insert OfferProduct',GetDate(),$CurrentDate,$CorrelationId);\n\n        merge into RS_SCHEMA.OfferProduct \n        using (\n            select distinct StagingOfferProduct.PRODUCT_CODE, Offer.Id as OfferId \n            from RS_SCHEMA.StagingOfferProduct\n            join RS_SCHEMA.Offer on Offer.OfferCode = StagingOfferProduct.OFFER_CODE  \n            where Offer.IsDeleted = 0 or Offer.IsDeleted is null\n        ) StagingOfferProduct\n        on OfferProduct.OfferId = StagingOfferProduct.OfferId and OfferProduct.ProductCode = StagingOfferProduct.PRODUCT_CODE   \n        when not matched then\n            insert (OfferId, ProductCode,CreatedDate,CreatedBy,IsDeleted)\n            values (StagingOfferProduct.OfferId, StagingOfferProduct.PRODUCT_CODE, GetDate(), 'Weekly Import', 0);\n    end if;\n\n    ------------------------------------------------------------------------------------------\n    --- OfferPromotion\n    ------------------------------------------------------------------------------------------\n    if(exists (select top 1 1 from Rs_Schema.StagingOfferPromotion)) then\n        insert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\n        values ('ImportFromStaging','Delete OfferPromotion',GetDate(),$CurrentDate,$CorrelationId);\n        \n        delete from RS_SCHEMA.OfferPromotion \n        using (select Offer.id as OfferId,Promotion.Id as PromotionId, StagingOfferPromotion.PROMOTION_CODE from RS_SCHEMA.StagingOfferPromotion\n            join  RS_SCHEMA.Offer on Offer.OfferCode = StagingOfferPromotion.OFFER_CODE \n            join  RS_SCHEMA.Promotion on Promotion.PromotionCode = StagingOfferPromotion.PROMOTION_CODE\n            where (Offer.IsDeleted = 0 or Offer.IsDeleted is null)      \n            )  StagingOfferPromotion\n        where  \n            OfferPromotion.OFFERID = StagingOfferPromotion.OfferId (+)\n        and OfferPromotion.PromotionId = StagingOfferPromotion.PromotionId (+)\n        and  StagingOfferPromotion.PROMOTION_CODE is null\n        and OfferPromotion.CreatedBy = 'Weekly Import';\n        \n        insert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\n        values ('ImportFromStaging','insert OfferPromotion',GetDate(),$CurrentDate,$CorrelationId);\n\n        merge into RS_SCHEMA.OfferPromotion \n        using (select distinct Offer.Id as OfferId, Promotion.Id as PromotionId from RS_SCHEMA.StagingOfferPromotion \n            join RS_SCHEMA.Offer  on Offer.OfferCode = StagingOfferPromotion.OFFER_CODE  \n            join RS_SCHEMA.Promotion on Promotion.PromotionCode = StagingOfferPromotion.PROMOTION_CODE\n            where (Offer.IsDeleted = 0 or Offer.IsDeleted is null)\n            ) StagingOfferPromotion\n\n        on OfferPromotion.OfferId = StagingOfferPromotion.OfferId and OfferPromotion.PromotionId = StagingOfferPromotion.PromotionId \n        when not matched then insert \n        ( OfferId, PromotionId,CreatedBy)\n        values (StagingOfferPromotion.OfferId,StagingOfferPromotion.PromotionId, 'Weekly Import');\n        \n    end if;\nend;","type":"Expression"}}],"scriptBlockExecutionTimeout":"02:00:00"}},{"name":"validate import from staging","type":"Script","dependsOn":[{"activity":"insert into main table","dependencyConditions":["Succeeded"]}],"policy":{"timeout":"0.12:00:00","retry":0,"retryIntervalInSeconds":30,"secureOutput":false,"secureInput":false},"userProperties":[],"linkedServiceName":{"referenceName":"[parameters('Snowflake_SandboxUnited')]","type":"LinkedServiceReference"},"typeProperties":{"scripts":[{"type":"NonQuery","text":{"value":"set CurrentDate = '@{variables('Import_date')}';\nset CorrelationId = '@{variables('CorrelationId')}';\nset _count = 0;\n\nbegin\n-- Make sure all CampaignCode in StagingCampaign must be in Campaign count == 0.\nset _count = (select count(*) from  Rs_Schema.StagingCampaign\nleft join Rs_Schema.Campaign  on StagingCampaign.CAMPAIGN_CODE = Campaign.CampaignCode and Campaign.IsDeleted = 0\nwhere Campaign.CampaignCode is null);\n\nif($_count>0) then\n\tInsert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\n\tvalues ('ImportFromStaging','Warning: some CampaignCode not in table Campaign',GetDate(),$CurrentDate,$CorrelationId);\nend if;\n\n-- Make sure all PromotionCode in StagingPromotion must be in Promotion count == 0.\n-- (join Rs_Schema.Campaign check exist CampaignCode)\nset _count = (select count(*) from  Rs_Schema.StagingPromotion\njoin Rs_Schema.Campaign on Campaign.CampaignCode = StagingPromotion.CAMPAIGN_CODE\nleft join Rs_Schema.Promotion  on StagingPromotion.PROMOTION_CODE = Promotion.PromotionCode and Promotion.CampaignId = CampaignId and Promotion.IsDeleted = 0\nwhere Promotion.PromotionCode is null);\n\nif($_count>0) then\n\tInsert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\n\tvalues ('ImportFromStaging','Warning: some PromotionCode not in table Promotion',GetDate(),$CurrentDate,$CorrelationId);\nend if;\n\n-- Make sure all ProductCode in StagingProduct must be in Product count == 0.\nset _count = (select count(*) from  Rs_Schema.StagingProduct\nleft join Rs_Schema.Product  on StagingProduct.PRODUCT_CODE = Product.ProductCode and Product.IsDeleted = 0\nwhere Product.ProductCode is null);\n\nif($_count>0) then\n\tInsert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\n\tvalues ('ImportFromStaging','Warning: some ProductCode not in table Product',GetDate(),$CurrentDate,$CorrelationId);\nend if;\n\n-- Make sure all offercode in stageOffer must be in offer count == 0.\nset _count = (select count(*) from  Rs_Schema.StagingOffer\nleft join Rs_Schema.Offer  on StagingOffer.OFFER_CODE = Offer.OfferCode and offer.IsDeleted = 0\nwhere offer.OfferCode is null);\n\nif($_count>0) then\n\tInsert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\n\tvalues ('ImportFromStaging','Warning: some OfferCode not in table Offer',GetDate(),$CurrentDate,$CorrelationId);\nend if;\n\n-- Make sure all record in StagingOfferProduct must be in OfferProduct count == 0.\n-- (join Rs_Schema.offer check exist offercode, join Rs_Schema.Product check exist productcode)\nset _count = (select count(*) from  Rs_Schema.StagingOfferProduct\njoin Rs_Schema.Offer on StagingOfferProduct.OFFER_CODE = Offer.OfferCode\njoin Rs_Schema.Product on Product.ProductCode = StagingOfferProduct.PRODUCT_CODE\nleft join Rs_Schema.OfferProduct  on StagingOfferProduct.PRODUCT_CODE = OfferProduct.ProductCode and offer.id = OfferProduct.OfferId and OfferProduct.IsDeleted = 0\nwhere OfferProduct.OfferId is null);\n\nif($_count>0) then\n\tInsert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\n\tvalues ('ImportFromStaging','Warning: some OfferCode-ProductCode not in table OfferProduct',GetDate(),$CurrentDate,$CorrelationId);\nend if;\n\n-- Make sure all record in StagingOfferPromotion must be in OfferPromotion count == 0.\n-- (join Rs_Schema.offer check exist offercode, join Rs_Schema.Promotion check exist PromotionCode)\n\nset _count = (select count(*) from Rs_Schema.StagingOfferPromotion\njoin Rs_Schema.Offer on StagingOfferPromotion.OFFER_CODE = Offer.OfferCode\njoin Rs_Schema.Promotion on Promotion.PromotionCode = StagingOfferPromotion.PROMOTION_CODE\nleft join Rs_Schema.OfferPromotion on OfferPromotion.OfferId = offer.Id and OfferPromotion.PromotionId = Promotion.Id\nwhere OfferPromotion.OfferId is null);\n\nif($_count>0) then\n\tInsert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\n\tvalues ('ImportFromStaging','Warning: some OfferCode-PromotionCode not in table OfferPromotion',GetDate(),$CurrentDate,$CorrelationId);\nend if;\n\n-- Make sure all record in StagingOfferStore must be in OfferStore count == 0.\n-- (join Rs_Schema.offer check exist offercode)\nset _count = (select count(*) from Rs_Schema.StagingOfferStore\njoin Rs_Schema.Offer on StagingOfferStore.OFFER_CODE = Offer.OfferCode\nleft join Rs_Schema.OfferStore on OfferStore.OfferId = offer.Id and OfferStore.StoreCode = StagingOfferStore.STORE_CODE and OfferStore.IsDeleted = 0\nwhere OfferStore.OfferId is null);\n\n\nif($_count>0) then\n\tInsert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\n\tvalues ('ImportFromStaging','Warning: some OfferCode-OfferStore not in table OfferStore',GetDate(),$CurrentDate,$CorrelationId);\nend if;\n\nInsert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\nvalues ('ImportFromStaging','Ending...',GetDate(),$CurrentDate,$CorrelationId);\n\n\nInsert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\nselect 'ImportFromStaging','Total StagingCampaign: ' || (select count(*) from Rs_Schema.StagingCampaign ),GETDATE(),$CurrentDate,$CorrelationId;\nInsert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\nselect 'ImportFromStaging','Total Campaign: ' || (select count(*) from  Rs_Schema.Campaign where IsDeleted = 0),GETDATE(),$CurrentDate,$CorrelationId;\n\nInsert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\nselect 'ImportFromStaging','Total StagingPromotion: ' || (select count(*) from Rs_Schema.StagingPromotion),GETDATE(),$CurrentDate,$CorrelationId;\nInsert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\nselect 'ImportFromStaging','Total Promotion: ' || (select count(*) from  Rs_Schema.Promotion where IsDeleted =0),GETDATE(),$CurrentDate,$CorrelationId;\n\nInsert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\nselect 'ImportFromStaging','Total StagingProduct: ' || (select count(*) from Rs_Schema.StagingProduct),GETDATE(),$CurrentDate,$CorrelationId;\nInsert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\nselect 'ImportFromStaging','Total Product: ' || (select count(*) from  Rs_Schema.Product where isdeleted = 0),GETDATE(),$CurrentDate,$CorrelationId;\n\nInsert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\nselect 'ImportFromStaging','Total StagingOffer: ' || (select count(*) from Rs_Schema.StagingOffer ),GETDATE(),$CurrentDate,$CorrelationId;\nInsert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\nselect 'ImportFromStaging','Total Offer: ' || (select count(*) from  Rs_Schema.offer where IsDeleted = 0),GETDATE(),$CurrentDate,$CorrelationId;\n\nInsert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\nselect 'ImportFromStaging','Total StagingOfferProduct: ' || (select count(*) from Rs_Schema.StagingOfferProduct),GETDATE(),$CurrentDate,$CorrelationId;\nInsert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\nselect 'ImportFromStaging','Total OfferProduct: ' || (select count(*) from  Rs_Schema.OfferProduct where IsDeleted = 0),GETDATE(),$CurrentDate,$CorrelationId;\n\nInsert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\nselect 'ImportFromStaging','Total StagingOfferPromotion: ' || (select count(*) from Rs_Schema.StagingOfferPromotion),GETDATE(),$CurrentDate,$CorrelationId;\nInsert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\nselect 'ImportFromStaging','Total OfferPromotion: ' ||  (select count(*) from Rs_Schema.OfferPromotion),GETDATE(),$CurrentDate,$CorrelationId;\n\nInsert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\nselect 'ImportFromStaging','Total StagingOfferStore: ' || (select count(*) from Rs_Schema.StagingOfferStore),GETDATE(),$CurrentDate,$CorrelationId;\nInsert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\nselect 'ImportFromStaging','Total OfferStore: ' || (select count(*) from  Rs_Schema.OfferStore  where IsDeleted = 0),GETDATE(),$CurrentDate,$CorrelationId;\n\nInsert into Rs_Schema.WeeklyImportLog (JobName,Action,LogTime,Date, CorrelationId)\nselect 'ImportFromStaging','Ending ImportFromStaging...',GETDATE(),$CurrentDate,$CorrelationId;\n\nend;","type":"Expression"}}],"scriptBlockExecutionTimeout":"02:00:00"}},{"name":"Set import Date","type":"SetVariable","dependsOn":[],"policy":{"secureOutput":false,"secureInput":false},"userProperties":[],"typeProperties":{"variableName":"Import_date","value":{"value":"@formatDateTime(convertFromUtc(utcNow(),'Central Standard Time'),'yyyyMMdd')","type":"Expression"}}},{"name":"Set correlationId","type":"SetVariable","dependsOn":[],"policy":{"secureOutput":false,"secureInput":false},"userProperties":[],"typeProperties":{"variableName":"CorrelationId","value":{"value":"@guid()","type":"Expression"}}},{"name":"Get Import Log","type":"Lookup","dependsOn":[{"activity":"validate import from staging","dependencyConditions":["Succeeded"]}],"policy":{"timeout":"7.00:00:00","retry":0,"retryIntervalInSeconds":30,"secureOutput":false,"secureInput":false},"userProperties":[],"typeProperties":{"source":{"type":"SnowflakeSource","query":{"value":"SELECT JobName, Action, LogTime, Description\n    FROM Rs_Schema.WeeklyImportLog\n    WHERE CorrelationId = '@{variables('CorrelationId')}'\n    ORDER BY LogTime;","type":"Expression"},"exportSettings":{"type":"SnowflakeExportCopyCommand"}},"dataset":{"referenceName":"SnowflakeTable_SandboxUnited_Offer_WeeklyImportLog","type":"DatasetReference","parameters":{}},"firstRowOnly":false}},{"name":"Process Log to Column","type":"ForEach","dependsOn":[{"activity":"Get Import Log","dependencyConditions":["Succeeded"]},{"activity":"Set open-tag table log","dependencyConditions":["Succeeded"]}],"userProperties":[],"typeProperties":{"items":{"value":"@activity('Get Import Log').output.value","type":"Expression"},"isSequential":true,"activities":[{"name":"Set Column Table","type":"SetVariable","dependsOn":[],"policy":{"secureOutput":false,"secureInput":false},"userProperties":[],"typeProperties":{"variableName":"ImportLogTemp","value":{"value":"@concat(variables('ImportLog'),'<tr>','<td>', item().LogTime, '</td>','<td>', item().JobName, '</td>','<td>', item().Action, '</td>','<td>', item().Description, '</td>','</tr>')","type":"Expression"}}},{"name":"Set To ImportLog","type":"SetVariable","dependsOn":[{"activity":"Set Column Table","dependencyConditions":["Completed"]}],"policy":{"secureOutput":false,"secureInput":false},"userProperties":[],"typeProperties":{"variableName":"ImportLog","value":{"value":"@variables('ImportLogTemp')","type":"Expression"}}}]}},{"name":"Set close-tag table log","type":"SetVariable","dependsOn":[{"activity":"Process Log to Column","dependencyConditions":["Succeeded"]}],"policy":{"secureOutput":false,"secureInput":false},"userProperties":[],"typeProperties":{"variableName":"ImportLog","value":{"value":"@concat(variables('ImportLogTemp'),'</table>')","type":"Expression"}}},{"name":"Set open-tag table log","type":"SetVariable","dependsOn":[],"policy":{"secureOutput":false,"secureInput":false},"userProperties":[],"typeProperties":{"variableName":"ImportLog","value":"<table><tr><th>Time</th><th>JobName</th><th>Action</th><th>Description</th></tr>"}},{"name":"Execute Success","type":"ExecutePipeline","dependsOn":[{"activity":"Set close-tag table log","dependencyConditions":["Succeeded"]}],"userProperties":[],"typeProperties":{"pipeline":{"referenceName":"sandboxunited_pipeline_Message_Notification_Success_V1","type":"PipelineReference"},"waitOnCompletion":true,"parameters":{"EmailTo":"tam.h@stor.ai"}}},{"name":"Execute Failed","type":"ExecutePipeline","dependsOn":[{"activity":"merge execution flow","dependencyConditions":["Failed","Skipped"]}],"userProperties":[],"typeProperties":{"pipeline":{"referenceName":"sandboxunited_pipeline_Message_Notification_Failed_V1","type":"PipelineReference"},"waitOnCompletion":true,"parameters":{"EmailTo":"tam.h@stor.ai"}}},{"name":"merge execution flow","type":"Wait","dependsOn":[{"activity":"Execute Success","dependencyConditions":["Succeeded"]},{"activity":"Invoke next","dependencyConditions":["Succeeded"]}],"userProperties":[],"typeProperties":{"waitTimeInSeconds":1}},{"name":"Invoke next","type":"ExecutePipeline","dependsOn":[{"activity":"validate import from staging","dependencyConditions":["Succeeded"]}],"userProperties":[],"typeProperties":{"pipeline":{"referenceName":"sandboxunited_pipeline_import_3_sf_2_sql","type":"PipelineReference"},"waitOnCompletion":false,"parameters":{}}},{"name":"Fail","type":"Fail","dependsOn":[{"activity":"Execute Failed","dependencyConditions":["Succeeded"]}],"userProperties":[],"typeProperties":{"message":"step failed","errorCode":"112"}}],"policy":{"elapsedTimeMetric":{}},"variables":{"Import_date":{"type":"String"},"CorrelationId":{"type":"String"},"ImportLog":{"type":"String"},"ImportLogTemp":{"type":"String"}},"folder":{"name":"Sandbox United/Offer/Import_Offer"},"annotations":[],"lastPublishTime":"2023-04-12T09:45:54Z"},"dependsOn":["[concat(variables('factoryId'), '/datasets/SnowflakeTable_SandboxUnited_Offer_WeeklyImportLog')]","[concat(variables('factoryId'), '/pipelines/sandboxunited_pipeline_Message_Notification_Success_V1')]","[concat(variables('factoryId'), '/pipelines/sandboxunited_pipeline_Message_Notification_Failed_V1')]","[concat(variables('factoryId'), '/pipelines/sandboxunited_pipeline_import_3_sf_2_sql')]"]},{"name":"[concat(parameters('factoryName'), '/SnowflakeTable_SandboxUnited_Offer_WeeklyImportLog')]","type":"Microsoft.DataFactory/factories/datasets","apiVersion":"2018-06-01","properties":{"linkedServiceName":{"referenceName":"[parameters('Snowflake_SandboxUnited')]","type":"LinkedServiceReference"},"folder":{"name":"Sandbox United/SandboxUnited_Offer"},"annotations":[],"type":"SnowflakeTable","schema":[{"name":"JOBNAME","type":"VARCHAR","precision":50,"scale":0},{"name":"ACTION","type":"VARCHAR","precision":200,"scale":0},{"name":"LOGTIME","type":"TIMESTAMP_NTZ","precision":29,"scale":9},{"name":"DATE","type":"VARCHAR","precision":8,"scale":0},{"name":"CORRELATIONID","type":"VARCHAR","precision":128,"scale":0},{"name":"DESCRIPTION","type":"VARCHAR","precision":244,"scale":0}],"typeProperties":{"schema":"RS_SCHEMA","table":"WEEKLYIMPORTLOG"}},"dependsOn":[]},{"name":"[concat(parameters('factoryName'), '/sandboxunited_pipeline_Message_Notification_Success_V1')]","type":"Microsoft.DataFactory/factories/pipelines","apiVersion":"2018-06-01","properties":{"activities":[{"name":"Success notitication V1","type":"WebActivity","dependsOn":[],"policy":{"timeout":"7.00:00:00","retry":0,"retryIntervalInSeconds":30,"secureOutput":false,"secureInput":false},"userProperties":[],"typeProperties":{"url":"https://dev-etl-notification.azurewebsites.net:443/api/send-mail-v2/triggers/manual/invoke?api-version=2022-05-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=dtvUizvpLpbvOZKtm5HTaEOw7gNX6iWsgPWLHMrdtZ4","method":"POST","headers":{},"body":{"value":"{\n   \"DataFactoryName\": '@{concat(' ',pipeline().DataFactory)}',\n   \"PipelineName\": '@{concat(' ',pipeline()?.TriggeredByPipelineName)}',\n   \"Subject\":  '@{concat('[SUCCESS]✅ ',pipeline().parameters.Enviroment,' ',pipeline().parameters.Subject)}',\n   \"ErrorMessage\": '@{concat(' ',pipeline().parameters.Message)}',\n   \"EmailTo\": '@{concat(' ',pipeline().parameters.EmailTo)}',\n   \"output\": '@{concat(' ',pipeline().parameters.Output)}',\n   \"data\": '@{concat(' ',pipeline().parameters.Data)}'\n}","type":"Expression"}}}],"policy":{"elapsedTimeMetric":{}},"parameters":{"Subject":{"type":"string"},"Message":{"type":"string","defaultValue":"Everything is okay"},"EmailTo":{"type":"string","defaultValue":"thuy.n@stor.ai,tam.h@stor.ai"},"Output":{"type":"string"},"Data":{"type":"string"},"Enviroment":{"type":"string","defaultValue":"SandboxUnited"}},"folder":{"name":"Notification Form/SandboxUnited_Notification"},"annotations":[],"lastPublishTime":"2023-04-12T09:45:51Z"},"dependsOn":[]},{"name":"[concat(parameters('factoryName'), '/sandboxunited_pipeline_Message_Notification_Failed_V1')]","type":"Microsoft.DataFactory/factories/pipelines","apiVersion":"2018-06-01","properties":{"activities":[{"name":"Failed notitication V1","type":"WebActivity","dependsOn":[],"policy":{"timeout":"7.00:00:00","retry":0,"retryIntervalInSeconds":30,"secureOutput":false,"secureInput":false},"userProperties":[],"typeProperties":{"url":"https://dev-etl-notification.azurewebsites.net:443/api/send-mail-v2/triggers/manual/invoke?api-version=2022-05-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=dtvUizvpLpbvOZKtm5HTaEOw7gNX6iWsgPWLHMrdtZ4","method":"POST","headers":{},"body":{"value":"{\n   \"DataFactoryName\": '@{concat(' ',pipeline().DataFactory)}',\n   \"PipelineName\": '@{concat(' ',pipeline()?.TriggeredByPipelineName)}',\n   \"Subject\":  ' @{concat('[FAILED]❌ ',pipeline().parameters.Enviroment,' ',pipeline().parameters.Subject)}',\n   \"ErrorMessage\": '@{concat(' ',pipeline().parameters.Message)}',\n   \"EmailTo\": '@{concat(' ',pipeline().parameters.EmailTo)}',\n   \"output\": '@{concat(' ',pipeline().parameters.Output)}',\n   \"data\": '@{concat(' ',pipeline().parameters.Data)}'\n}","type":"Expression"}}}],"policy":{"elapsedTimeMetric":{}},"parameters":{"Subject":{"type":"string"},"Message":{"type":"string","defaultValue":"Something is wrong!"},"EmailTo":{"type":"string","defaultValue":"thuy.n@stor.ai,tam.h@stor.ai"},"Output":{"type":"string"},"Data":{"type":"string"},"Enviroment":{"type":"string","defaultValue":"SandboxUnited"}},"folder":{"name":"Notification Form/SandboxUnited_Notification"},"annotations":[],"lastPublishTime":"2023-04-12T09:45:52Z"},"dependsOn":[]},{"name":"[concat(parameters('factoryName'), '/sandboxunited_pipeline_import_3_sf_2_sql')]","type":"Microsoft.DataFactory/factories/pipelines","apiVersion":"2018-06-01","properties":{"description":"CDC  SF : delta > SQL : staging > SQL : main","activities":[{"name":"Offer Delta","type":"Copy","dependsOn":[{"activity":"get cdc","dependencyConditions":["Succeeded"]}],"policy":{"timeout":"0.12:00:00","retry":0,"retryIntervalInSeconds":30,"secureOutput":false,"secureInput":false},"userProperties":[],"typeProperties":{"source":{"type":"SnowflakeSource","query":{"value":"SELECT ID,\n       NAME,\n       DESCRIPTION,\n       OFFERTYPE,\n       OFFERCODE,\n       PROMOTIONCODE,\n       ISSTOREOFFER,\n       ISONLINE,\n       ISCARDREQUIRED,\n       IMAGEURL,\n       SALETYPE,\n       ISCOMPLEX,\n       ISMUSTBUY,\n       OFFERSEGMENT,\n       ISACTIVE,\n       EXTRA,\n       CREATEDDATE,\n       CREATEDBY,\n       MODIFIEDBY,\n       ISDELETED,\n       OLDID,\n       FULLDESCRIPTION,\n       STARTDATE,\n       ENDDATE,\n       SALETYPEDESCRIPTION,\n       TITLEBEAUTYCOPY,\n       DETAILSBEAUTYCOPY,\n       DISCOUNTPRICING,\n       SIZE,\n       DISCLAIMER,\n       MEMBERACCOUNT,\n       PROVIDER,\n       CUSTOMEROFFERFILEID,\n       CUSTOMEROFFERFILESTATUS,\n       MEMBERACCOUNTLOADQUANTITY,\n       METADATA$ACTION,\n       METADATA$ISUPDATE\nFROM RS_SCHEMA.StagingOffer_Delta\nWHERE transactionId = '@{variables('TransactionId')}'","type":"Expression"},"exportSettings":{"type":"SnowflakeExportCopyCommand"}},"sink":{"type":"SqlServerSink","preCopyScript":"TRUNCATE TABLE StagingOffer_Delta","writeBehavior":"insert","sqlWriterUseTableLock":false},"enableStaging":true,"stagingSettings":{"linkedServiceName":{"referenceName":"[parameters('AzureBlobStorageUat2United')]","type":"LinkedServiceReference"}},"logSettings":{"enableCopyActivityLog":true,"copyActivityLogSettings":{"logLevel":"Warning","enableReliableLogging":false},"logLocationSettings":{"linkedServiceName":{"referenceName":"[parameters('AzureBlobStorageUat2United')]","type":"LinkedServiceReference"}}},"translator":{"type":"TabularTranslator","mappings":[{"source":{"name":"ID","type":"String"},"sink":{"name":"Id","type":"Guid"}},{"source":{"name":"NAME","type":"String"},"sink":{"name":"Name","type":"String"}},{"source":{"name":"DESCRIPTION","type":"String"},"sink":{"name":"Description","type":"String"}},{"source":{"name":"OFFERTYPE","type":"String"},"sink":{"name":"OfferType","type":"String"}},{"source":{"name":"OFFERCODE","type":"String"},"sink":{"name":"OfferCode","type":"String"}},{"source":{"name":"PROMOTIONCODE","type":"String"},"sink":{"name":"PromotionCode","type":"String"}},{"source":{"name":"ISSTOREOFFER","type":"String"},"sink":{"name":"IsStoreOffer","type":"String"}},{"source":{"name":"ISONLINE","type":"String"},"sink":{"name":"IsOnline","type":"String"}},{"source":{"name":"ISCARDREQUIRED","type":"String"},"sink":{"name":"IsCardRequired","type":"String"}},{"source":{"name":"IMAGEURL","type":"String"},"sink":{"name":"ImageUrl","type":"String"}},{"source":{"name":"SALETYPE","type":"String"},"sink":{"name":"SaleType","type":"String"}},{"source":{"name":"ISCOMPLEX","type":"String"},"sink":{"name":"IsComplex","type":"String"}},{"source":{"name":"ISMUSTBUY","type":"String"},"sink":{"name":"IsMustBuy","type":"String"}},{"source":{"name":"OFFERSEGMENT","type":"String"},"sink":{"name":"OfferSegment","type":"String"}},{"source":{"name":"ISACTIVE","type":"String"},"sink":{"name":"IsActive","type":"String"}},{"source":{"name":"EXTRA","type":"String"},"sink":{"name":"Extra","type":"String"}},{"source":{"name":"CREATEDDATE","type":"String"},"sink":{"name":"CreatedDate","type":"String"}},{"source":{"name":"CREATEDBY","type":"String"},"sink":{"name":"CreatedBy","type":"String"}},{"source":{"name":"MODIFIEDBY","type":"String"},"sink":{"name":"ModifiedBy","type":"String"}},{"source":{"name":"ISDELETED","type":"String"},"sink":{"name":"IsDeleted","type":"String"}},{"source":{"name":"OLDID","type":"String"},"sink":{"name":"OldId","type":"String"}},{"source":{"name":"FULLDESCRIPTION","type":"String"},"sink":{"name":"FullDescription","type":"String"}},{"source":{"name":"STARTDATE","type":"String"},"sink":{"name":"StartDate","type":"String"}},{"source":{"name":"ENDDATE","type":"String"},"sink":{"name":"EndDate","type":"String"}},{"source":{"name":"SALETYPEDESCRIPTION","type":"String"},"sink":{"name":"SaleTypeDescription","type":"String"}},{"source":{"name":"TITLEBEAUTYCOPY","type":"String"},"sink":{"name":"TitleBeautyCopy","type":"String"}},{"source":{"name":"DETAILSBEAUTYCOPY","type":"String"},"sink":{"name":"DetailsBeautyCopy","type":"String"}},{"source":{"name":"DISCOUNTPRICING","type":"String"},"sink":{"name":"DiscountPricing","type":"String"}},{"source":{"name":"SIZE","type":"String"},"sink":{"name":"Size","type":"String"}},{"source":{"name":"DISCLAIMER","type":"String"},"sink":{"name":"Disclaimer","type":"String"}},{"source":{"name":"MEMBERACCOUNT","type":"String"},"sink":{"name":"MemberAccount","type":"String"}},{"source":{"name":"PROVIDER","type":"String"},"sink":{"name":"Provider","type":"String"}},{"source":{"name":"CUSTOMEROFFERFILEID","type":"String"},"sink":{"name":"CustomerOfferFileId","type":"String"}},{"source":{"name":"CUSTOMEROFFERFILESTATUS","type":"String"},"sink":{"name":"CustomerOfferFileStatus","type":"String"}},{"source":{"name":"MEMBERACCOUNTLOADQUANTITY","type":"String"},"sink":{"name":"MemberAccountLoadQuantity","type":"String"}},{"source":{"name":"METADATA$ACTION","type":"String"},"sink":{"name":"Metadata$Action","type":"String"}},{"source":{"name":"METADATA$ISUPDATE","type":"String"},"sink":{"name":"Metadata$IsUpdate","type":"Boolean"}}]}},"inputs":[{"referenceName":"SnowflakeTable_SandboxUnited_Offer_StagingOffer_Delta","type":"DatasetReference","parameters":{}}],"outputs":[{"referenceName":"SqlServerTable_SandboxUnited_StagingOffer_StagingOfferDelta","type":"DatasetReference","parameters":{}}]},{"name":"Campaign Delta","type":"Copy","dependsOn":[{"activity":"get cdc","dependencyConditions":["Succeeded"]}],"policy":{"timeout":"0.12:00:00","retry":0,"retryIntervalInSeconds":30,"secureOutput":false,"secureInput":false},"userProperties":[],"typeProperties":{"source":{"type":"SnowflakeSource","query":{"value":"SELECT ID,\n       NAME,\n       DESCRIPTION,\n       CAMPAIGNCODE,\n       STARTDATE,\n       ENDDATE,\n       PRESTARTDATE,\n       PREENDDATE,\n       CREATEDDATE,\n       CREATEDBY,\n       MODIFIEDBY,\n       ISDELETED,\n       METADATA$ACTION,\n       METADATA$ISUPDATE\nFROM RS_SCHEMA.StagingCampaign_Delta\nWHERE transactionId = '@{variables('TransactionId')}'","type":"Expression"},"exportSettings":{"type":"SnowflakeExportCopyCommand"}},"sink":{"type":"SqlServerSink","preCopyScript":"TRUNCATE TABLE StagingCampaign_Delta","writeBehavior":"insert","sqlWriterUseTableLock":false},"enableStaging":true,"stagingSettings":{"linkedServiceName":{"referenceName":"[parameters('AzureBlobStorageUat2United')]","type":"LinkedServiceReference"}},"logSettings":{"enableCopyActivityLog":true,"copyActivityLogSettings":{"logLevel":"Warning","enableReliableLogging":false},"logLocationSettings":{"linkedServiceName":{"referenceName":"[parameters('AzureBlobStorageUat2United')]","type":"LinkedServiceReference"}}},"translator":{"type":"TabularTranslator","mappings":[{"source":{"name":"ID","type":"String"},"sink":{"name":"Id","type":"Guid"}},{"source":{"name":"NAME","type":"String"},"sink":{"name":"Name","type":"String"}},{"source":{"name":"DESCRIPTION","type":"String"},"sink":{"name":"Description","type":"String"}},{"source":{"name":"CAMPAIGNCODE","type":"String"},"sink":{"name":"CampaignCode","type":"String"}},{"source":{"name":"STARTDATE","type":"String"},"sink":{"name":"StartDate","type":"String"}},{"source":{"name":"ENDDATE","type":"String"},"sink":{"name":"EndDate","type":"String"}},{"source":{"name":"PRESTARTDATE","type":"String"},"sink":{"name":"PreStartDate","type":"String"}},{"source":{"name":"PREENDDATE","type":"String"},"sink":{"name":"PreEndDate","type":"String"}},{"source":{"name":"CREATEDDATE","type":"String"},"sink":{"name":"CreatedDate","type":"String"}},{"source":{"name":"CREATEDBY","type":"String"},"sink":{"name":"CreatedBy","type":"String"}},{"source":{"name":"MODIFIEDBY","type":"String"},"sink":{"name":"ModifiedBy","type":"String"}},{"source":{"name":"ISDELETED","type":"String"},"sink":{"name":"IsDeleted","type":"String"}},{"source":{"name":"METADATA$ACTION","type":"String"},"sink":{"name":"Metadata$Action","type":"String"}},{"source":{"name":"METADATA$ISUPDATE","type":"String"},"sink":{"name":"Metadata$IsUpdate","type":"Boolean"}}]}},"inputs":[{"referenceName":"SnowflakeTable_SandboxUnited_Offer_StagingCampaign_Delta","type":"DatasetReference","parameters":{}}],"outputs":[{"referenceName":"SqlServerTable_SandboxUnited_StagingOffer_StagingCampaign_Delta","type":"DatasetReference","parameters":{}}]},{"name":"Promotion Delta","type":"Copy","dependsOn":[{"activity":"get cdc","dependencyConditions":["Succeeded"]}],"policy":{"timeout":"0.12:00:00","retry":0,"retryIntervalInSeconds":30,"secureOutput":false,"secureInput":false},"userProperties":[],"typeProperties":{"source":{"type":"SnowflakeSource","query":{"value":"SELECT ID,\n       NAME,\n       DESCRIPTION,\n       PROMOTIONCODE,\n       STARTDATE,\n       ENDDATE,\n       PRESTARTDATE,\n       PREENDDATE,\n       CAMPAIGNCODE,\n       CAMPAIGNID,\n       CREATEDDATE,\n       CREATEDBY,\n       MODIFIEDBY,\n       ISDELETED,\n       METADATA$ACTION,\n       METADATA$ISUPDATE\nFROM RS_SCHEMA.StagingPromotion_Delta\nWHERE transactionId = '@{variables('TransactionId')}'","type":"Expression"},"exportSettings":{"type":"SnowflakeExportCopyCommand"}},"sink":{"type":"SqlServerSink","preCopyScript":"TRUNCATE TABLE StagingPromotion_Delta","writeBehavior":"insert","sqlWriterUseTableLock":false},"enableStaging":true,"stagingSettings":{"linkedServiceName":{"referenceName":"[parameters('AzureBlobStorageUat2United')]","type":"LinkedServiceReference"}},"logSettings":{"enableCopyActivityLog":true,"copyActivityLogSettings":{"logLevel":"Warning","enableReliableLogging":false},"logLocationSettings":{"linkedServiceName":{"referenceName":"[parameters('AzureBlobStorageUat2United')]","type":"LinkedServiceReference"}}},"translator":{"type":"TabularTranslator","mappings":[{"source":{"name":"ID","type":"String"},"sink":{"name":"Id","type":"Guid"}},{"source":{"name":"NAME","type":"String"},"sink":{"name":"Name","type":"String"}},{"source":{"name":"DESCRIPTION","type":"String"},"sink":{"name":"Description","type":"String"}},{"source":{"name":"PROMOTIONCODE","type":"String"},"sink":{"name":"PromotionCode","type":"String"}},{"source":{"name":"STARTDATE","type":"String"},"sink":{"name":"StartDate","type":"String"}},{"source":{"name":"ENDDATE","type":"String"},"sink":{"name":"EndDate","type":"String"}},{"source":{"name":"PRESTARTDATE","type":"String"},"sink":{"name":"PreStartDate","type":"String"}},{"source":{"name":"PREENDDATE","type":"String"},"sink":{"name":"PreEndDate","type":"String"}},{"source":{"name":"CAMPAIGNCODE","type":"String"},"sink":{"name":"CampaignCode","type":"String"}},{"source":{"name":"CAMPAIGNID","type":"String"},"sink":{"name":"CampaignId","type":"Guid"}},{"source":{"name":"CREATEDDATE","type":"String"},"sink":{"name":"CreatedDate","type":"String"}},{"source":{"name":"CREATEDBY","type":"String"},"sink":{"name":"CreatedBy","type":"String"}},{"source":{"name":"MODIFIEDBY","type":"String"},"sink":{"name":"ModifiedBy","type":"String"}},{"source":{"name":"ISDELETED","type":"String"},"sink":{"name":"IsDeleted","type":"String"}},{"source":{"name":"METADATA$ACTION","type":"String"},"sink":{"name":"Metadata$Action","type":"String"}},{"source":{"name":"METADATA$ISUPDATE","type":"String"},"sink":{"name":"Metadata$IsUpdate","type":"Boolean"}}]}},"inputs":[{"referenceName":"SnowflakeTable_SandboxUnited_Offer_StagingPromotion_Delta","type":"DatasetReference","parameters":{}}],"outputs":[{"referenceName":"SqlServerTable_SandboxUnited_StagingOffer_StagingPromotionDelta","type":"DatasetReference","parameters":{}}]},{"name":"Product Delta","type":"Copy","dependsOn":[{"activity":"get cdc","dependencyConditions":["Succeeded"]}],"policy":{"timeout":"0.12:00:00","retry":0,"retryIntervalInSeconds":30,"secureOutput":false,"secureInput":false},"userProperties":[],"typeProperties":{"source":{"type":"SnowflakeSource","query":{"value":"SELECT ID,\n       DESCRIPTION,\n       FULLDESCRIPTION,\n       MOVEMENT,\n       DEPARTMENTCODE,\n       DEPARTMENTNAME,\n       PRODUCTCODE,\n       DEPARTMENTCODE1,\n       DEPARTMENTNAME1,\n       DEPARTMENTCODE2,\n       DEPARTMENTNAME2,\n       DEPARTMENTCODE3,\n       DEPARTMENTNAME3,\n       ISDELETED,\n       PRIMARYUPC,\n       METADATA$ACTION,\n       METADATA$ISUPDATE\nFROM RS_SCHEMA.StagingProduct_Delta\nWHERE transactionId = '@{variables('TransactionId')}'","type":"Expression"},"exportSettings":{"type":"SnowflakeExportCopyCommand"}},"sink":{"type":"SqlServerSink","preCopyScript":"TRUNCATE TABLE StagingProduct_Delta","writeBehavior":"insert","sqlWriterUseTableLock":false},"enableStaging":true,"stagingSettings":{"linkedServiceName":{"referenceName":"[parameters('AzureBlobStorageUat2United')]","type":"LinkedServiceReference"}},"logSettings":{"enableCopyActivityLog":true,"copyActivityLogSettings":{"logLevel":"Warning","enableReliableLogging":false},"logLocationSettings":{"linkedServiceName":{"referenceName":"[parameters('AzureBlobStorageUat2United')]","type":"LinkedServiceReference"}}},"translator":{"type":"TabularTranslator","mappings":[{"source":{"name":"ID","type":"String"},"sink":{"name":"Id","type":"Guid"}},{"source":{"name":"DESCRIPTION","type":"String"},"sink":{"name":"Description","type":"String"}},{"source":{"name":"FULLDESCRIPTION","type":"String"},"sink":{"name":"FullDescription","type":"String"}},{"source":{"name":"MOVEMENT","type":"String"},"sink":{"name":"Movement","type":"String"}},{"source":{"name":"DEPARTMENTCODE","type":"String"},"sink":{"name":"DepartmentCode","type":"String"}},{"source":{"name":"DEPARTMENTNAME","type":"String"},"sink":{"name":"DepartmentName","type":"String"}},{"source":{"name":"PRODUCTCODE","type":"String"},"sink":{"name":"ProductCode","type":"String"}},{"source":{"name":"DEPARTMENTCODE1","type":"String"},"sink":{"name":"DepartmentCode1","type":"String"}},{"source":{"name":"DEPARTMENTNAME1","type":"String"},"sink":{"name":"DepartmentName1","type":"String"}},{"source":{"name":"DEPARTMENTCODE2","type":"String"},"sink":{"name":"DepartmentCode2","type":"String"}},{"source":{"name":"DEPARTMENTNAME2","type":"String"},"sink":{"name":"DepartmentName2","type":"String"}},{"source":{"name":"DEPARTMENTCODE3","type":"String"},"sink":{"name":"DepartmentCode3","type":"String"}},{"source":{"name":"DEPARTMENTNAME3","type":"String"},"sink":{"name":"DepartmentName3","type":"String"}},{"source":{"name":"ISDELETED","type":"String"},"sink":{"name":"IsDeleted","type":"String"}},{"source":{"name":"PRIMARYUPC","type":"String"},"sink":{"name":"PrimaryUPC","type":"String"}},{"source":{"name":"METADATA$ACTION","type":"String"},"sink":{"name":"Metadata$Action","type":"String"}},{"source":{"name":"METADATA$ISUPDATE","type":"String"},"sink":{"name":"Metadata$IsUpdate","type":"Boolean"}}]}},"inputs":[{"referenceName":"SnowflakeTable_SandboxUnited_Offer_StagingProduct_Delta","type":"DatasetReference","parameters":{}}],"outputs":[{"referenceName":"SqlServerTable_SandboxUnited_StagingOffer_StagingProductDelta","type":"DatasetReference","parameters":{}}]},{"name":"OfferExt Delta","type":"Copy","dependsOn":[{"activity":"get cdc","dependencyConditions":["Succeeded"]}],"policy":{"timeout":"0.12:00:00","retry":0,"retryIntervalInSeconds":30,"secureOutput":false,"secureInput":false},"userProperties":[],"typeProperties":{"source":{"type":"SnowflakeSource","query":{"value":"SELECT OFFERID,\n       ISSTACKABLE,\n       AVAILABLEQUANTITY,\n       USEDQUANTITY,\n       DISCOUNTTYPE,\n       MAXALLOWEDAMOUNT,\n       EFFECTIVESTARTDATE,\n       EFFECTIVEENDDATE,\n       APPLYLIMITBYUSER,\n       CREATEDDATE,\n       CREATEDBY,\n       MODIFIEDBY,\n       ISDELETED,\n       APPLYTYPE,\n       CONDITIONTYPE,\n       MINSUBTOTAL,\n       PERCENTAGEOFF,\n       SYSTEMSERVICES,\n       CUSTOMSERVICES,\n       CATEGORIES,\n       COLLECTIONS,\n       BRANDS,\n       MINCONDITIONVALUE,\n       PRODUCTCODES,\n       ISPOSTTAXDISCOUNT,\n       OFFERUPC,\n       OFFERUPCTYPE,\n       OFFERDISPLAYCODE,\n       FROMSEGMENT,\n       FROMGROUPSEGMENT,\n       FROMMA,\n       FROMGROUPMA,\n       EXPIREAFTERDAYS,\n       ATTRIBUTE1,\n       ATTRIBUTE2,\n       ATTRIBUTE3,\n       ATTRIBUTE4,\n       ATTRIBUTE5,\n       ATTRIBUTE6,\n       ATTRIBUTE7,\n       ATTRIBUTE8,\n       ATTRIBUTE9,\n       ATTRIBUTE10,\n       ATTRIBUTE11,\n       ATTRIBUTE12,\n       ATTRIBUTE13,\n       ATTRIBUTE14,\n       ATTRIBUTE15,\n       ATTRIBUTE16,\n       ATTRIBUTE17,\n       ATTRIBUTE18,\n       ATTRIBUTE19,\n       ATTRIBUTE20,\n       OFFERAUTOLOAD,\n       OFFERVALUEMISC,\n       METADATA$ACTION,\n       METADATA$ISUPDATE\nFROM RS_SCHEMA.StagingOfferExt_Delta\nWHERE transactionId = '@{variables('TransactionId')}'","type":"Expression"},"exportSettings":{"type":"SnowflakeExportCopyCommand"}},"sink":{"type":"SqlServerSink","preCopyScript":"TRUNCATE TABLE StagingOfferExt_Delta","writeBehavior":"insert","sqlWriterUseTableLock":false},"enableStaging":true,"stagingSettings":{"linkedServiceName":{"referenceName":"[parameters('AzureBlobStorageUat2United')]","type":"LinkedServiceReference"}},"logSettings":{"enableCopyActivityLog":true,"copyActivityLogSettings":{"logLevel":"Warning","enableReliableLogging":false},"logLocationSettings":{"linkedServiceName":{"referenceName":"[parameters('AzureBlobStorageUat2United')]","type":"LinkedServiceReference"}}},"translator":{"type":"TabularTranslator","mappings":[{"source":{"name":"OFFERID","type":"String"},"sink":{"name":"OfferId","type":"Guid"}},{"source":{"name":"ISSTACKABLE","type":"String"},"sink":{"name":"IsStackable","type":"String"}},{"source":{"name":"AVAILABLEQUANTITY","type":"String"},"sink":{"name":"AvailableQuantity","type":"String"}},{"source":{"name":"USEDQUANTITY","type":"String"},"sink":{"name":"UsedQuantity","type":"String"}},{"source":{"name":"DISCOUNTTYPE","type":"String"},"sink":{"name":"DiscountType","type":"String"}},{"source":{"name":"MAXALLOWEDAMOUNT","type":"String"},"sink":{"name":"MaxAllowedAmount","type":"String"}},{"source":{"name":"EFFECTIVESTARTDATE","type":"String"},"sink":{"name":"EffectiveStartDate","type":"String"}},{"source":{"name":"EFFECTIVEENDDATE","type":"String"},"sink":{"name":"EffectiveEndDate","type":"String"}},{"source":{"name":"APPLYLIMITBYUSER","type":"String"},"sink":{"name":"ApplyLimitByUser","type":"String"}},{"source":{"name":"CREATEDDATE","type":"String"},"sink":{"name":"CreatedDate","type":"String"}},{"source":{"name":"CREATEDBY","type":"String"},"sink":{"name":"CreatedBy","type":"String"}},{"source":{"name":"MODIFIEDBY","type":"String"},"sink":{"name":"ModifiedBy","type":"String"}},{"source":{"name":"ISDELETED","type":"String"},"sink":{"name":"IsDeleted","type":"String"}},{"source":{"name":"APPLYTYPE","type":"String"},"sink":{"name":"ApplyType","type":"String"}},{"source":{"name":"CONDITIONTYPE","type":"String"},"sink":{"name":"ConditionType","type":"String"}},{"source":{"name":"MINSUBTOTAL","type":"String"},"sink":{"name":"MinSubTotal","type":"String"}},{"source":{"name":"PERCENTAGEOFF","type":"String"},"sink":{"name":"PercentageOff","type":"String"}},{"source":{"name":"SYSTEMSERVICES","type":"String"},"sink":{"name":"SystemServices","type":"String"}},{"source":{"name":"CUSTOMSERVICES","type":"String"},"sink":{"name":"CustomServices","type":"String"}},{"source":{"name":"CATEGORIES","type":"String"},"sink":{"name":"Categories","type":"String"}},{"source":{"name":"COLLECTIONS","type":"String"},"sink":{"name":"Collections","type":"String"}},{"source":{"name":"BRANDS","type":"String"},"sink":{"name":"Brands","type":"String"}},{"source":{"name":"MINCONDITIONVALUE","type":"String"},"sink":{"name":"MinConditionValue","type":"String"}},{"source":{"name":"PRODUCTCODES","type":"String"},"sink":{"name":"ProductCodes","type":"String"}},{"source":{"name":"ISPOSTTAXDISCOUNT","type":"String"},"sink":{"name":"IsPostTaxDiscount","type":"String"}},{"source":{"name":"OFFERUPC","type":"String"},"sink":{"name":"OfferUpc","type":"String"}},{"source":{"name":"OFFERUPCTYPE","type":"String"},"sink":{"name":"OfferUpcType","type":"String"}},{"source":{"name":"OFFERDISPLAYCODE","type":"String"},"sink":{"name":"OfferDisplayCode","type":"String"}},{"source":{"name":"FROMSEGMENT","type":"String"},"sink":{"name":"FromSegment","type":"String"}},{"source":{"name":"FROMGROUPSEGMENT","type":"String"},"sink":{"name":"FromGroupSegment","type":"String"}},{"source":{"name":"FROMMA","type":"String"},"sink":{"name":"FromMA","type":"String"}},{"source":{"name":"FROMGROUPMA","type":"String"},"sink":{"name":"FromGroupMA","type":"String"}},{"source":{"name":"EXPIREAFTERDAYS","type":"String"},"sink":{"name":"ExpireAfterDays","type":"String"}},{"source":{"name":"ATTRIBUTE1","type":"String"},"sink":{"name":"Attribute1","type":"String"}},{"source":{"name":"ATTRIBUTE2","type":"String"},"sink":{"name":"Attribute2","type":"String"}},{"source":{"name":"ATTRIBUTE3","type":"String"},"sink":{"name":"Attribute3","type":"String"}},{"source":{"name":"ATTRIBUTE4","type":"String"},"sink":{"name":"Attribute4","type":"String"}},{"source":{"name":"ATTRIBUTE5","type":"String"},"sink":{"name":"Attribute5","type":"String"}},{"source":{"name":"ATTRIBUTE6","type":"String"},"sink":{"name":"Attribute6","type":"String"}},{"source":{"name":"ATTRIBUTE7","type":"String"},"sink":{"name":"Attribute7","type":"String"}},{"source":{"name":"ATTRIBUTE8","type":"String"},"sink":{"name":"Attribute8","type":"String"}},{"source":{"name":"ATTRIBUTE9","type":"String"},"sink":{"name":"Attribute9","type":"String"}},{"source":{"name":"ATTRIBUTE10","type":"String"},"sink":{"name":"Attribute10","type":"String"}},{"source":{"name":"ATTRIBUTE11","type":"String"},"sink":{"name":"Attribute11","type":"String"}},{"source":{"name":"ATTRIBUTE12","type":"String"},"sink":{"name":"Attribute12","type":"String"}},{"source":{"name":"ATTRIBUTE13","type":"String"},"sink":{"name":"Attribute13","type":"String"}},{"source":{"name":"ATTRIBUTE14","type":"String"},"sink":{"name":"Attribute14","type":"String"}},{"source":{"name":"ATTRIBUTE15","type":"String"},"sink":{"name":"Attribute15","type":"String"}},{"source":{"name":"ATTRIBUTE16","type":"String"},"sink":{"name":"Attribute16","type":"String"}},{"source":{"name":"ATTRIBUTE17","type":"String"},"sink":{"name":"Attribute17","type":"String"}},{"source":{"name":"ATTRIBUTE18","type":"String"},"sink":{"name":"Attribute18","type":"String"}},{"source":{"name":"ATTRIBUTE19","type":"String"},"sink":{"name":"Attribute19","type":"String"}},{"source":{"name":"ATTRIBUTE20","type":"String"},"sink":{"name":"Attribute20","type":"String"}},{"source":{"name":"OFFERAUTOLOAD","type":"String"},"sink":{"name":"OfferAutoLoad","type":"String"}},{"source":{"name":"OFFERVALUEMISC","type":"String"},"sink":{"name":"OfferValueMisc","type":"String"}},{"source":{"name":"METADATA$ACTION","type":"String"},"sink":{"name":"Metadata$Action","type":"String"}},{"source":{"name":"METADATA$ISUPDATE","type":"String"},"sink":{"name":"Metadata$IsUpdate","type":"Boolean"}}]}},"inputs":[{"referenceName":"SnowflakeTable_SandboxUnited_Offer_StagingOfferExt_Delta","type":"DatasetReference","parameters":{}}],"outputs":[{"referenceName":"SqlServerTable_SandboxUnited_StagingOffer_StagingOfferExtDelta","type":"DatasetReference","parameters":{}}]},{"name":"OfferStore Delta","type":"Copy","dependsOn":[{"activity":"get cdc","dependencyConditions":["Succeeded"]}],"policy":{"timeout":"0.12:00:00","retry":0,"retryIntervalInSeconds":30,"secureOutput":false,"secureInput":false},"userProperties":[],"typeProperties":{"source":{"type":"SnowflakeSource","query":{"value":"SELECT OFFERID,\n       STORECODE,\n       CREATEDDATE,\n       CREATEDBY,\n       MODIFIEDBY,\n       ISDELETED,\n       METADATA$ACTION,\n       METADATA$ISUPDATE\nFROM RS_SCHEMA.StagingOfferStore_Delta\nWHERE transactionId = '@{variables('TransactionId')}'","type":"Expression"},"exportSettings":{"type":"SnowflakeExportCopyCommand"}},"sink":{"type":"SqlServerSink","preCopyScript":"TRUNCATE TABLE StagingOfferStore_Delta","writeBehavior":"insert","sqlWriterUseTableLock":false},"enableStaging":true,"stagingSettings":{"linkedServiceName":{"referenceName":"[parameters('AzureBlobStorageUat2United')]","type":"LinkedServiceReference"}},"logSettings":{"enableCopyActivityLog":true,"copyActivityLogSettings":{"logLevel":"Warning","enableReliableLogging":false},"logLocationSettings":{"linkedServiceName":{"referenceName":"[parameters('AzureBlobStorageUat2United')]","type":"LinkedServiceReference"}}},"translator":{"type":"TabularTranslator","mappings":[{"source":{"name":"OFFERID","type":"String"},"sink":{"name":"OfferId","type":"Guid"}},{"source":{"name":"STORECODE","type":"String"},"sink":{"name":"StoreCode","type":"String"}},{"source":{"name":"CREATEDDATE","type":"String"},"sink":{"name":"CreatedDate","type":"String"}},{"source":{"name":"CREATEDBY","type":"String"},"sink":{"name":"CreatedBy","type":"String"}},{"source":{"name":"MODIFIEDBY","type":"String"},"sink":{"name":"ModifiedBy","type":"String"}},{"source":{"name":"ISDELETED","type":"String"},"sink":{"name":"IsDeleted","type":"String"}},{"source":{"name":"METADATA$ACTION","type":"String"},"sink":{"name":"Metadata$Action","type":"String"}},{"source":{"name":"METADATA$ISUPDATE","type":"String"},"sink":{"name":"Metadata$IsUpdate","type":"Boolean"}}]}},"inputs":[{"referenceName":"SnowflakeTable_SandboxUnited_Offer_StagingOfferStore_Delta","type":"DatasetReference","parameters":{}}],"outputs":[{"referenceName":"SqlServerTable_SandboxUnited_StagingOffer_StagingOfferStoreDelta","type":"DatasetReference","parameters":{}}]},{"name":"OfferPromotion Delta","type":"Copy","dependsOn":[{"activity":"get cdc","dependencyConditions":["Succeeded"]}],"policy":{"timeout":"0.12:00:00","retry":0,"retryIntervalInSeconds":30,"secureOutput":false,"secureInput":false},"userProperties":[],"typeProperties":{"source":{"type":"SnowflakeSource","query":{"value":"SELECT OFFERID, PROMOTIONID, CREATEDBY, METADATA$ACTION, METADATA$ISUPDATE\nFROM RS_SCHEMA.StagingOfferPromotion_Delta\nWHERE transactionId = '@{variables('TransactionId')}'","type":"Expression"},"exportSettings":{"type":"SnowflakeExportCopyCommand"}},"sink":{"type":"SqlServerSink","preCopyScript":"TRUNCATE TABLE StagingOfferPromotion_Delta","writeBehavior":"insert","sqlWriterUseTableLock":false},"enableStaging":true,"stagingSettings":{"linkedServiceName":{"referenceName":"[parameters('AzureBlobStorageUat2United')]","type":"LinkedServiceReference"}},"logSettings":{"enableCopyActivityLog":true,"copyActivityLogSettings":{"logLevel":"Warning","enableReliableLogging":false},"logLocationSettings":{"linkedServiceName":{"referenceName":"[parameters('AzureBlobStorageUat2United')]","type":"LinkedServiceReference"}}},"translator":{"type":"TabularTranslator","mappings":[{"source":{"name":"OFFERID","type":"String"},"sink":{"name":"OfferId","type":"Guid"}},{"source":{"name":"PROMOTIONID","type":"String"},"sink":{"name":"PromotionId","type":"Guid"}},{"source":{"name":"CREATEDBY","type":"String"},"sink":{"name":"CreatedBy","type":"String"}},{"source":{"name":"METADATA$ACTION","type":"String"},"sink":{"name":"Metadata$Action","type":"String"}},{"source":{"name":"METADATA$ISUPDATE","type":"String"},"sink":{"name":"Metadata$IsUpdate","type":"Boolean"}}]}},"inputs":[{"referenceName":"SnowflakeTable_SandboxUnited_Offer_StagingOfferPromotion_Delta","type":"DatasetReference","parameters":{}}],"outputs":[{"referenceName":"SqlServerTable_SandboxUnited_StagingOffer_StagingOfferPromotionDelta","type":"DatasetReference","parameters":{}}]},{"name":"OfferProduct Delta","type":"Copy","dependsOn":[{"activity":"get cdc","dependencyConditions":["Succeeded"]}],"policy":{"timeout":"0.12:00:00","retry":0,"retryIntervalInSeconds":30,"secureOutput":false,"secureInput":false},"userProperties":[],"typeProperties":{"source":{"type":"SnowflakeSource","query":{"value":"SELECT OFFERID,\n       PRODUCTCODE,\n       NAME,\n       CREATEDDATE,\n       CREATEDBY,\n       MODIFIEDBY,\n       ISDELETED,\n       METADATA$ACTION,\n       METADATA$ISUPDATE\nFROM RS_SCHEMA.StagingOfferProduct_Delta\nWHERE transactionId = '@{variables('TransactionId')}'","type":"Expression"},"exportSettings":{"type":"SnowflakeExportCopyCommand"}},"sink":{"type":"SqlServerSink","preCopyScript":"TRUNCATE TABLE StagingOfferProduct_Delta","writeBehavior":"insert","sqlWriterUseTableLock":false},"enableStaging":true,"stagingSettings":{"linkedServiceName":{"referenceName":"[parameters('AzureBlobStorageUat2United')]","type":"LinkedServiceReference"}},"logSettings":{"enableCopyActivityLog":true,"copyActivityLogSettings":{"logLevel":"Warning","enableReliableLogging":false},"logLocationSettings":{"linkedServiceName":{"referenceName":"[parameters('AzureBlobStorageUat2United')]","type":"LinkedServiceReference"}}},"translator":{"type":"TabularTranslator","mappings":[{"source":{"name":"OFFERID","type":"String"},"sink":{"name":"OfferId","type":"Guid"}},{"source":{"name":"PRODUCTCODE","type":"String"},"sink":{"name":"ProductCode","type":"String"}},{"source":{"name":"NAME","type":"String"},"sink":{"name":"Name","type":"String"}},{"source":{"name":"CREATEDDATE","type":"String"},"sink":{"name":"CreatedDate","type":"String"}},{"source":{"name":"CREATEDBY","type":"String"},"sink":{"name":"CreatedBy","type":"String"}},{"source":{"name":"MODIFIEDBY","type":"String"},"sink":{"name":"ModifiedBy","type":"String"}},{"source":{"name":"ISDELETED","type":"String"},"sink":{"name":"IsDeleted","type":"String"}},{"source":{"name":"METADATA$ACTION","type":"String"},"sink":{"name":"Metadata$Action","type":"String"}},{"source":{"name":"METADATA$ISUPDATE","type":"String"},"sink":{"name":"Metadata$IsUpdate","type":"Boolean"}}]}},"inputs":[{"referenceName":"SnowflakeTable_SandboxUnited_Offer_StagingOfferProduct_Delta","type":"DatasetReference","parameters":{}}],"outputs":[{"referenceName":"SqlServerTable_SandboxUnited_StagingOffer_StagingOfferProductDelta","type":"DatasetReference","parameters":{}}]},{"name":"Set transactionId","type":"SetVariable","dependsOn":[],"policy":{"secureOutput":false,"secureInput":false},"userProperties":[],"typeProperties":{"variableName":"TransactionId","value":{"value":"@guid()","type":"Expression"}}},{"name":"get cdc","type":"Script","dependsOn":[{"activity":"Set transactionId","dependencyConditions":["Succeeded"]}],"policy":{"timeout":"0.12:00:00","retry":0,"retryIntervalInSeconds":30,"secureOutput":false,"secureInput":false},"userProperties":[],"linkedServiceName":{"referenceName":"[parameters('Snowflake_SandboxUnited')]","type":"LinkedServiceReference"},"typeProperties":{"scripts":[{"type":"NonQuery","text":{"value":"SET transactionId = '@{variables('TransactionId')}';\n\nINSERT INTO Rs_Schema.Stagingofferext_Delta (Offerid, Isstackable, Availablequantity, Usedquantity, Discounttype, Maxallowedamount, Effectivestartdate, Effectiveenddate, Applylimitbyuser, Createddate, Createdby, Modifiedby, Isdeleted, Applytype, Conditiontype, Minsubtotal, Percentageoff, Systemservices, Customservices, Categories, Collections, Brands, Minconditionvalue, Productcodes, Isposttaxdiscount, Offerupc, Offerupctype, Offerdisplaycode, Fromsegment, Fromgroupsegment, Fromma, Fromgroupma, Expireafterdays, Attribute1, Attribute2, Attribute3, Attribute4, Attribute5, Attribute6, Attribute7, Attribute8, Attribute9, Attribute10, Attribute11, Attribute12, Attribute13, Attribute14, Attribute15, Attribute16, Attribute17, Attribute18, Attribute19, Attribute20, Offerautoload, Offervaluemisc, Metadata$Action, Metadata$Isupdate, Metadata$Row_Id, Transactionid)\nSELECT Offerid, Isstackable, Availablequantity, Usedquantity, Discounttype, Maxallowedamount, Effectivestartdate, Effectiveenddate, Applylimitbyuser, Createddate, Createdby, Modifiedby, Isdeleted, Applytype, Conditiontype, Minsubtotal, Percentageoff, Systemservices, Customservices, Categories, Collections, Brands, Minconditionvalue, Productcodes, Isposttaxdiscount, Offerupc, Offerupctype, Offerdisplaycode, Fromsegment, Fromgroupsegment, Fromma, Fromgroupma, Expireafterdays, Attribute1, Attribute2, Attribute3, Attribute4, Attribute5, Attribute6, Attribute7, Attribute8, Attribute9, Attribute10, Attribute11, Attribute12, Attribute13, Attribute14, Attribute15, Attribute16, Attribute17, Attribute18, Attribute19, Attribute20, Offerautoload, Offervaluemisc, Metadata$Action, Metadata$Isupdate, Metadata$Row_Id, $Transactionid \nFROM Rs_schema.v_offerext_check\nWHERE Metadata$Action != 'Delete' OR (Metadata$Action = 'Delete' AND Metadata$IsUpdate = FALSE);\n\nINSERT INTO Rs_Schema.Stagingofferpromotion_Delta (Offerid, Promotionid, Createdby, Metadata$Action, Metadata$Isupdate, Metadata$Row_Id, Transactionid)\nSELECT Offerid, Promotionid, Createdby, Metadata$Action, Metadata$Isupdate, Metadata$Row_Id, $Transactionid \nFROM Rs_schema.v_offerpromotion_check\nWHERE Metadata$Action != 'Delete' OR (Metadata$Action = 'Delete' AND Metadata$IsUpdate = FALSE);\n\nINSERT INTO Rs_Schema.Stagingofferproduct_Delta (Offerid, Productcode, Name, Createddate, Createdby, Modifiedby, Isdeleted, Metadata$Action, Metadata$Isupdate, Metadata$Row_Id, Transactionid)\nSELECT Offerid, Productcode, Name, Createddate, Createdby, Modifiedby, Isdeleted, Metadata$Action, Metadata$Isupdate, Metadata$Row_Id, $Transactionid \nFROM Rs_schema.v_offerproduct_check\nWHERE Metadata$Action != 'Delete' OR (Metadata$Action = 'Delete' AND Metadata$IsUpdate = FALSE);\n\nINSERT INTO Rs_Schema.Stagingcampaign_Delta (Id, Name, Description, Campaigncode, Startdate, Enddate, Prestartdate, Preenddate, Createddate, Createdby, Modifiedby, Isdeleted, Metadata$Action, Metadata$Isupdate, Metadata$Row_Id, Transactionid)\nSELECT Id, Name, Description, Campaigncode, Startdate, Enddate, Prestartdate, Preenddate, Createddate, Createdby, Modifiedby, Isdeleted, Metadata$Action, Metadata$Isupdate, Metadata$Row_Id, $Transactionid \nFROM Rs_schema.v_campaign_check\nWHERE Metadata$Action != 'Delete' OR (Metadata$Action = 'Delete' AND Metadata$IsUpdate = FALSE);\n\nINSERT INTO Rs_Schema.Stagingoffer_Delta (Id, Name, Description, Offertype, Offercode, Promotioncode, Isstoreoffer, Isonline, Iscardrequired, Imageurl, Saletype, Iscomplex, Ismustbuy, Offersegment, Isactive, Extra, Createddate, Createdby, Modifiedby, Isdeleted, Oldid, Fulldescription, Startdate, Enddate, Saletypedescription, Titlebeautycopy, Detailsbeautycopy, Discountpricing, Size, Disclaimer,  Memberaccount, Provider, Customerofferfileid, Customerofferfilestatus, Memberaccountloadquantity, Metadata$Action, Metadata$Isupdate, Metadata$Row_Id, Transactionid)\nSELECT Id, Name, Description, Offertype, Offercode, Promotioncode, Isstoreoffer, Isonline, Iscardrequired, Imageurl, Saletype, Iscomplex, Ismustbuy, Offersegment, Isactive, Extra, Createddate, Createdby, Modifiedby, Isdeleted, Oldid, Fulldescription, Startdate, Enddate, Saletypedescription, Titlebeautycopy, Detailsbeautycopy, Discountpricing, Size, Disclaimer, Memberaccount, Provider, Customerofferfileid, Customerofferfilestatus, Memberaccountloadquantity, Metadata$Action, Metadata$Isupdate, Metadata$Row_Id, $Transactionid \nFROM Rs_schema.v_offer_check\nWHERE Metadata$Action != 'Delete' OR (Metadata$Action = 'Delete' AND Metadata$IsUpdate = FALSE);\n\nINSERT INTO Rs_Schema.Stagingofferstore_Delta (Offerid, Storecode, Createddate, Createdby, Modifiedby, Isdeleted, Metadata$Action, Metadata$Isupdate, Metadata$Row_Id, Transactionid)\nSELECT Offerid, Storecode, Createddate, Createdby, Modifiedby, Isdeleted, Metadata$Action, Metadata$Isupdate, Metadata$Row_Id, $Transactionid \nFROM Rs_schema.v_offerstore_check\nWHERE Metadata$Action != 'Delete' OR (Metadata$Action = 'Delete' AND Metadata$IsUpdate = FALSE);\n\nINSERT INTO Rs_Schema.Stagingpromotion_Delta (Id, Name, Description, Promotioncode, Startdate, Enddate, Prestartdate, Preenddate, Campaigncode, Campaignid, Createddate, Createdby, Modifiedby, Isdeleted, Metadata$Action, Metadata$Isupdate, Metadata$Row_Id, Transactionid)\nSELECT Id, Name, Description, Promotioncode, Startdate, Enddate, Prestartdate, Preenddate, Campaigncode, Campaignid, Createddate, Createdby, Modifiedby, Isdeleted, Metadata$Action, Metadata$Isupdate, Metadata$Row_Id, $Transactionid \nFROM Rs_schema.v_promotion_check\nWHERE Metadata$Action != 'Delete' OR (Metadata$Action = 'Delete' AND Metadata$IsUpdate = FALSE);\n\nINSERT INTO Rs_Schema.Stagingproduct_Delta (Id, Description, Fulldescription, Movement, Departmentcode, Departmentname, Productcode, Departmentcode1, Departmentname1, Departmentcode2, Departmentname2, Departmentcode3, Departmentname3, Isdeleted, Primaryupc, Metadata$Action, Metadata$Isupdate, Metadata$Row_Id, Transactionid)\nSELECT Id, Description, Fulldescription, Movement, Departmentcode, Departmentname, Productcode, Departmentcode1, Departmentname1, Departmentcode2, Departmentname2, Departmentcode3, Departmentname3, Isdeleted, Primaryupc, Metadata$Action, Metadata$Isupdate, Metadata$Row_Id, $Transactionid \nFROM Rs_schema.v_product_check\nWHERE Metadata$Action != 'Delete' OR (Metadata$Action = 'Delete' AND Metadata$IsUpdate = FALSE);\n","type":"Expression"}}],"scriptBlockExecutionTimeout":"02:00:00"}},{"name":"insert into main tables","type":"Script","dependsOn":[{"activity":"Offer Delta","dependencyConditions":["Succeeded"]},{"activity":"Campaign Delta","dependencyConditions":["Succeeded"]},{"activity":"Promotion Delta","dependencyConditions":["Succeeded"]},{"activity":"Product Delta","dependencyConditions":["Succeeded"]},{"activity":"OfferExt Delta","dependencyConditions":["Succeeded"]},{"activity":"OfferStore Delta","dependencyConditions":["Succeeded"]},{"activity":"OfferPromotion Delta","dependencyConditions":["Succeeded"]},{"activity":"OfferProduct Delta","dependencyConditions":["Succeeded"]}],"policy":{"timeout":"0.12:00:00","retry":0,"retryIntervalInSeconds":30,"secureOutput":false,"secureInput":false},"userProperties":[],"linkedServiceName":{"referenceName":"[parameters('SqlServer_SandboxUnited_Offer')]","type":"LinkedServiceReference"},"typeProperties":{"scripts":[{"type":"NonQuery","text":"-- Stage 5 - version 2.0.1\r\n\r\n-- TODO: Implement INSERT duplicate removal (i.e. if `INSERT` a duplicated key, it should keep 1 only)\r\n\r\n---------------------------------------------------------------------------------------------------------\r\n-- Apply CDC on Offer\r\n---------------------------------------------------------------------------------------------------------\r\nBEGIN\r\n    BEGIN TRANSACTION;\r\n\r\n    UPDATE Offer\r\n    SET Name                      = staging.Name\r\n      , Description               = staging.Description\r\n      , OfferType                 = IIF(staging.OfferType = '', NULL, CONVERT(SMALLINT, staging.OfferType))\r\n      , OfferCode                 = staging.OfferCode\r\n      , PromotionCode             = staging.PromotionCode\r\n      , IsStoreOffer              = IIF(staging.IsStoreOffer = '', NULL, CONVERT(BIT, staging.IsStoreOffer))\r\n      , IsOnline                  = IIF(staging.IsOnline = '', NULL, CONVERT(BIT, staging.IsOnline))\r\n      , IsCardRequired            = IIF(staging.IsCardRequired = '', NULL, CONVERT(BIT, staging.IsCardRequired))\r\n      , ImageUrl                  = staging.ImageUrl\r\n      , SaleType                  = IIF(staging.SaleType = '', NULL, CONVERT(SMALLINT, staging.SaleType))\r\n      , IsComplex                 = IIF(staging.IsComplex = '', NULL, CONVERT(BIT, staging.IsComplex))\r\n      , IsMustBuy                 = IIF(staging.IsMustBuy = '', NULL, CONVERT(BIT, staging.IsMustBuy))\r\n      , OfferSegment              = IIF(staging.OfferSegment = '', NULL, CONVERT(INT, staging.OfferSegment))\r\n      , IsActive                  = IIF(staging.IsActive = '', NULL, CONVERT(BIT, staging.IsActive))\r\n      , Extra                     = staging.Extra\r\n      , CreatedDate               = IIF(staging.CreatedDate = '', NULL, CONVERT(DATETIME, staging.CreatedDate))\r\n      , CreatedBy                 = staging.CreatedBy\r\n      , ModifiedDate              = GETDATE()\r\n      , ModifiedBy                = staging.ModifiedBy\r\n      , IsDeleted                 = IIF(staging.IsDeleted = '', NULL, CONVERT(BIT, staging.IsDeleted))\r\n      , OldId                     = staging.OldId\r\n      , FullDescription           = staging.FullDescription\r\n      , StartDate                 = IIF(staging.StartDate = '', NULL, CONVERT(DATETIME, staging.StartDate))\r\n      , EndDate                   = IIF(staging.EndDate = '', NULL, CONVERT(DATETIME, staging.EndDate))\r\n      , SaleTypeDescription       = staging.SaleTypeDescription\r\n      , TitleBeautyCopy           = staging.TitleBeautyCopy\r\n      , DetailsBeautyCopy         = staging.DetailsBeautyCopy\r\n      , DiscountPricing           = staging.DiscountPricing\r\n      , SIZE                      = staging.Size\r\n      , Disclaimer                = staging.Disclaimer\r\n      , Hashcolumn                = IIF(staging.Hashcolumn = '', NULL, CONVERT(VARBINARY, staging.Hashcolumn))\r\n      , MemberAccount             = IIF(staging.MemberAccount = '', NULL, CONVERT(INT, staging.MemberAccount))\r\n      , Provider                  = IIF(staging.Provider = '', NULL, CONVERT(SMALLINT, staging.Provider))\r\n      , CustomerOfferFileId       = IIF(staging.CustomerOfferFileId = '', NULL,\r\n                                        CONVERT(INT, staging.CustomerOfferFileId))\r\n      , CustomerOfferFileStatus   = IIF(staging.CustomerOfferFileStatus = '', NULL,\r\n                                        CONVERT(BIT, staging.CustomerOfferFileStatus))\r\n      , MemberAccountLoadQuantity = IIF(staging.MemberAccountLoadQuantity = '', NULL,\r\n                                        CONVERT(DECIMAL(18, 10), staging.MemberAccountLoadQuantity))\r\n    FROM Offer\r\n             JOIN [Sandbox-UnitedStaging].dbo.[StagingOffer_Delta] staging ON offer.id = staging.id\r\n    WHERE Metadata$Action = 'INSERT';\r\n\r\n    INSERT INTO Offer ( Id, Name, Description, OfferType, OfferCode, PromotionCode, IsStoreOffer, IsOnline\r\n                      , IsCardRequired, ImageUrl, SaleType, IsComplex, IsMustBuy, OfferSegment, IsActive, Extra\r\n                      , CreatedDate, CreatedBy, ModifiedDate, ModifiedBy, IsDeleted, OldId\r\n                      , FullDescription, StartDate, EndDate, SaleTypeDescription, TitleBeautyCopy, DetailsBeautyCopy\r\n                      , DiscountPricing, Size, Disclaimer, MemberAccount, Provider, CustomerOfferFileId\r\n                      , CustomerOfferFileStatus, MemberAccountLoadQuantity)\r\n    SELECT Id\r\n         , Name\r\n         , Description\r\n         , IIF(OfferType = '', NULL, CONVERT(SMALLINT, OfferType))\r\n         , OfferCode\r\n         , PromotionCode\r\n         , IIF(IsStoreOffer = '', NULL, CONVERT(BIT, IsStoreOffer))\r\n         , IIF(IsOnline = '', NULL, CONVERT(BIT, IsOnline))\r\n         , IIF(IsCardRequired = '', NULL, CONVERT(BIT, IsCardRequired))\r\n         , ImageUrl\r\n         , IIF(SaleType = '', NULL, CONVERT(SMALLINT, SaleType))\r\n         , IIF(IsComplex = '', NULL, CONVERT(BIT, IsComplex))\r\n         , IIF(IsMustBuy = '', NULL, CONVERT(BIT, IsMustBuy))\r\n         , IIF(OfferSegment = '', NULL, CONVERT(INT, OfferSegment))\r\n         , IIF(IsActive = '', NULL, CONVERT(BIT, IsActive))\r\n         , Extra\r\n         , IIF(CreatedDate = '', NULL, CONVERT(DATETIME, CreatedDate))\r\n         , CreatedBy\r\n         , IIF(ModifiedDate = '', NULL, CONVERT(DATETIME, ModifiedDate))\r\n         , ModifiedBy\r\n         , IIF(IsDeleted = '', NULL, CONVERT(BIT, IsDeleted))\r\n         , OldId\r\n         , FullDescription\r\n         , IIF(StartDate = '', NULL, CONVERT(DATETIME, StartDate))\r\n         , IIF(EndDate = '', NULL, CONVERT(DATETIME, EndDate))\r\n         , SaleTypeDescription\r\n         , TitleBeautyCopy\r\n         , DetailsBeautyCopy\r\n         , DiscountPricing\r\n         , Size\r\n         , Disclaimer\r\n         , IIF(MemberAccount = '', NULL, CONVERT(INT, MemberAccount))\r\n         , IIF(Provider = '', NULL, CONVERT(SMALLINT, Provider))\r\n         , IIF(CustomerOfferFileId = '', NULL, CONVERT(INT, CustomerOfferFileId))\r\n         , IIF(CustomerOfferFileStatus = '', NULL, CONVERT(BIT, CustomerOfferFileStatus))\r\n         , IIF(MemberAccountLoadQuantity = '', NULL, CONVERT(DECIMAL(18, 10), MemberAccountLoadQuantity))\r\n    FROM [Sandbox-UnitedStaging].dbo.[StagingOffer_Delta] AS staging\r\n    WHERE Metadata$Action = 'INSERT'\r\n      AND NOT EXISTS(SELECT 1\r\n                     FROM Offer AS main\r\n                     WHERE main.Id = staging.Id);\r\n\r\n    COMMIT TRANSACTION;\r\nEND;\r\n---------------------------------------------------------------------------------------------------------\r\n-- Apply CDC on Campaign\r\n---------------------------------------------------------------------------------------------------------\r\nBEGIN\r\n    BEGIN TRANSACTION;\r\n\r\n    UPDATE Campaign\r\n    SET Name         = staging.Name\r\n      , Description  = staging.Description\r\n      , CampaignCode = staging.CampaignCode\r\n      , StartDate    = IIF(staging.StartDate = '', NULL, CONVERT(DATETIME, staging.StartDate))\r\n      , EndDate      = IIF(staging.EndDate = '', NULL, CONVERT(DATETIME, staging.EndDate))\r\n      , PreStartDate = IIF(staging.PreStartDate = '', NULL, CONVERT(DATETIME, staging.PreStartDate))\r\n      , PreEndDate   = IIF(staging.PreEndDate = '', NULL, CONVERT(DATETIME, staging.PreEndDate))\r\n      , CreatedDate  = IIF(staging.CreatedDate = '', NULL, CONVERT(DATETIME, staging.CreatedDate))\r\n      , CreatedBy    = staging.CreatedBy\r\n      , ModifiedDate = GETDATE()\r\n      , ModifiedBy   = staging.ModifiedBy\r\n      , IsDeleted    = IIF(staging.IsDeleted = '', NULL, CONVERT(BIT, staging.IsDeleted))\r\n    FROM Campaign main\r\n             JOIN [Sandbox-UnitedStaging].dbo.[StagingCampaign_Delta] staging ON main.id = staging.id\r\n    WHERE Metadata$Action = 'INSERT';\r\n\r\n    INSERT INTO Campaign ( Id, Name, Description, CampaignCode, StartDate, EndDate, PreStartDate, PreEndDate\r\n                         , CreatedDate, CreatedBy, ModifiedDate, ModifiedBy, IsDeleted)\r\n    SELECT Id\r\n         , Name\r\n         , Description\r\n         , CampaignCode\r\n         , IIF(StartDate = '', NULL, CONVERT(DATETIME, StartDate))\r\n         , IIF(EndDate = '', NULL, CONVERT(DATETIME, EndDate))\r\n         , IIF(PreStartDate = '', NULL, CONVERT(DATETIME, PreStartDate))\r\n         , IIF(PreEndDate = '', NULL, CONVERT(DATETIME, PreEndDate))\r\n         , IIF(CreatedDate = '', NULL, CONVERT(DATETIME, CreatedDate))\r\n         , CreatedBy\r\n         , IIF(ModifiedDate = '', NULL, CONVERT(DATETIME, ModifiedDate))\r\n         , ModifiedBy\r\n         , IIF(IsDeleted = '', NULL, CONVERT(BIT, IsDeleted))\r\n    FROM [Sandbox-UnitedStaging].dbo.[StagingCampaign_Delta] AS staging\r\n    WHERE Metadata$Action = 'INSERT'\r\n      AND NOT EXISTS(SELECT 1\r\n                     FROM Campaign AS main\r\n                     WHERE main.Id = staging.Id);\r\n\r\n    COMMIT TRANSACTION;\r\nEND;\r\n\r\n---------------------------------------------------------------------------------------------------------\r\n-- Apply CDC on Promotion\r\n---------------------------------------------------------------------------------------------------------\r\nBEGIN\r\n    BEGIN TRANSACTION;\r\n\r\n    UPDATE Promotion\r\n    SET Name          = staging.Name\r\n      , Description   = staging.Description\r\n      , PromotionCode = staging.PromotionCode\r\n      , StartDate     = IIF(staging.StartDate = '', NULL, CONVERT(DATETIME, staging.StartDate))\r\n      , EndDate       = IIF(staging.EndDate = '', NULL, CONVERT(DATETIME, staging.EndDate))\r\n      , PreStartDate  = IIF(staging.PreStartDate = '', NULL, CONVERT(DATETIME, staging.PreStartDate))\r\n      , PreEndDate    = IIF(staging.PreEndDate = '', NULL, CONVERT(DATETIME, staging.PreEndDate))\r\n      , CampaignCode  = staging.CampaignCode\r\n      , CampaignId    = staging.CampaignId\r\n      , CreatedDate   = IIF(staging.CreatedDate = '', NULL, CONVERT(DATETIME, staging.CreatedDate))\r\n      , CreatedBy     = staging.CreatedBy\r\n      , ModifiedDate  = GETDATE()\r\n      , ModifiedBy    = staging.ModifiedBy\r\n      , IsDeleted     = IIF(staging.IsDeleted = '', NULL, CONVERT(BIT, staging.IsDeleted))\r\n    FROM promotion main\r\n             JOIN [Sandbox-UnitedStaging].dbo.[Stagingpromotion_Delta] staging ON main.id = staging.id\r\n    WHERE Metadata$Action = 'INSERT';\r\n\r\n    INSERT INTO Promotion ( Id, Name, Description, PromotionCode, StartDate, EndDate, PreStartDate, PreEndDate\r\n                          , CampaignCode, CampaignId, CreatedDate, CreatedBy, ModifiedDate, ModifiedBy, IsDeleted)\r\n    SELECT Id\r\n         , Name\r\n         , Description\r\n         , PromotionCode\r\n         , IIF(StartDate = '', NULL, CONVERT(DATETIME, StartDate))\r\n         , IIF(EndDate = '', NULL, CONVERT(DATETIME, EndDate))\r\n         , IIF(PreStartDate = '', NULL, CONVERT(DATETIME, PreStartDate))\r\n         , IIF(PreEndDate = '', NULL, CONVERT(DATETIME, PreEndDate))\r\n         , CampaignCode\r\n         , CampaignId\r\n         , IIF(CreatedDate = '', NULL, CONVERT(DATETIME, CreatedDate))\r\n         , CreatedBy\r\n         , IIF(ModifiedDate = '', NULL, CONVERT(DATETIME, ModifiedDate))\r\n         , ModifiedBy\r\n         , IIF(IsDeleted = '', NULL, CONVERT(BIT, IsDeleted))\r\n    FROM [Sandbox-UnitedStaging].dbo.[StagingPromotion_Delta] AS staging\r\n    WHERE Metadata$Action = 'INSERT'\r\n      AND NOT EXISTS(SELECT 1\r\n                     FROM Promotion AS main\r\n                     WHERE main.Id = staging.Id);\r\n\r\n    COMMIT TRANSACTION;\r\nEND;\r\n\r\n---------------------------------------------------------------------------------------------------------\r\n-- Apply CDC on Product\r\n---------------------------------------------------------------------------------------------------------\r\nBEGIN\r\n    BEGIN TRANSACTION;\r\n\r\n    UPDATE Product\r\n    SET Description     = staging.Description\r\n      , FullDescription = staging.FullDescription\r\n      , Movement        = IIF(staging.Movement = '', NULL, CONVERT(INT, staging.Movement))\r\n      , DepartmentCode  = staging.DepartmentCode\r\n      , DepartmentName  = staging.DepartmentName\r\n      , ProductCode     = staging.ProductCode\r\n      , DepartmentCode1 = staging.DepartmentCode1\r\n      , DepartmentName1 = staging.DepartmentName1\r\n      , DepartmentCode2 = staging.DepartmentCode2\r\n      , DepartmentName2 = staging.DepartmentName2\r\n      , DepartmentCode3 = staging.DepartmentCode3\r\n      , DepartmentName3 = staging.DepartmentName3\r\n      , IsDeleted       = IIF(staging.IsDeleted = '', NULL, CONVERT(BIT, staging.IsDeleted))\r\n      , PrimaryUPC      = staging.PrimaryUPC\r\n    FROM product main\r\n             JOIN [Sandbox-UnitedStaging].dbo.[StagingProduct_Delta] staging ON main.id = staging.id\r\n    WHERE Metadata$Action = 'INSERT';\r\n\r\n    INSERT INTO Product ( Id, Description, FullDescription, Movement, DepartmentCode, DepartmentName, ProductCode\r\n                        , DepartmentCode1, DepartmentName1, DepartmentCode2, DepartmentName2, DepartmentCode3\r\n                        , DepartmentName3, IsDeleted, PrimaryUPC)\r\n    SELECT Id\r\n         , Description\r\n         , FullDescription\r\n         , IIF(Movement = '', NULL, CONVERT(INT, Movement))\r\n         , DepartmentCode\r\n         , DepartmentName\r\n         , ProductCode\r\n         , DepartmentCode1\r\n         , DepartmentName1\r\n         , DepartmentCode2\r\n         , DepartmentName2\r\n         , DepartmentCode3\r\n         , DepartmentName3\r\n         , IIF(IsDeleted = '', NULL, CONVERT(BIT, IsDeleted))\r\n         , PrimaryUPC\r\n    FROM [Sandbox-UnitedStaging].dbo.[StagingProduct_Delta] AS staging\r\n    WHERE Metadata$Action = 'INSERT'\r\n      AND NOT EXISTS(SELECT 1\r\n                     FROM Product AS main\r\n                     WHERE main.Id = staging.Id);\r\n\r\n    COMMIT TRANSACTION;\r\nEND;\r\n\r\n---------------------------------------------------------------------------------------------------------\r\n-- Apply CDC on OfferExt\r\n---------------------------------------------------------------------------------------------------------\r\nBEGIN\r\n    BEGIN TRANSACTION;\r\n\r\n    UPDATE OfferExt\r\n    SET IsStackable        = IIF(staging.IsStackable = '', NULL, CONVERT(BIT, staging.IsStackable))\r\n      , AvailableQuantity  = IIF(staging.AvailableQuantity = '', NULL, CONVERT(BIGINT, staging.AvailableQuantity))\r\n      , UsedQuantity       = IIF(staging.UsedQuantity = '', NULL, CONVERT(BIGINT, staging.UsedQuantity))\r\n      , DiscountType       = IIF(staging.DiscountType = '', NULL, CONVERT(SMALLINT, staging.DiscountType))\r\n      , MaxAllowedAmount   = IIF(staging.MaxAllowedAmount = '', NULL,\r\n                                 CONVERT(DECIMAL(19, 10), staging.MaxAllowedAmount))\r\n      , EffectiveStartDate = IIF(staging.EffectiveStartDate = '', NULL, CONVERT(DATETIME, staging.EffectiveStartDate))\r\n      , EffectiveEndDate   = IIF(staging.EffectiveEndDate = '', NULL, CONVERT(DATETIME, staging.EffectiveEndDate))\r\n      , ApplyLimitByUser   = IIF(staging.ApplyLimitByUser = '', NULL, CONVERT(INT, staging.ApplyLimitByUser))\r\n      , CreatedDate        = IIF(staging.CreatedDate = '', NULL, CONVERT(DATETIME, staging.CreatedDate))\r\n      , CreatedBy          = staging.CreatedBy\r\n      , ModifiedDate       = IIF(staging.ModifiedDate = '', NULL, CONVERT(DATETIME, staging.ModifiedDate))\r\n      , ModifiedBy         = staging.ModifiedBy\r\n      , IsDeleted          = IIF(staging.IsDeleted = '', NULL, CONVERT(BIT, staging.IsDeleted))\r\n      , ApplyType          = IIF(staging.ApplyType = '', NULL, CONVERT(SMALLINT, staging.ApplyType))\r\n      , ConditionType      = IIF(staging.ConditionType = '', NULL, CONVERT(SMALLINT, staging.ConditionType))\r\n      , MinSubTotal        = IIF(staging.MinSubTotal = '', NULL, CONVERT(DECIMAL(19, 10), staging.MinSubTotal))\r\n      , PercentageOff      = IIF(staging.PercentageOff = '', NULL, CONVERT(FLOAT, staging.PercentageOff))\r\n      , SystemServices     = staging.SystemServices\r\n      , CustomServices     = staging.CustomServices\r\n      , Categories         = staging.Categories\r\n      , Collections        = staging.Collections\r\n      , Brands             = staging.Brands\r\n      , MinConditionValue  = IIF(staging.MinConditionValue = '', NULL,\r\n                                 CONVERT(DECIMAL(19, 10), staging.MinConditionValue))\r\n      , ProductCodes       = staging.ProductCodes\r\n      , IsPostTaxDiscount  = IIF(staging.IsPostTaxDiscount = '', NULL, CONVERT(BIT, staging.IsPostTaxDiscount))\r\n      , OfferUpc           = staging.OfferUpc\r\n      , OfferUpcType       = IIF(staging.OfferUpcType = '', NULL, CONVERT(SMALLINT, staging.OfferUpcType))\r\n      , OfferDisplayCode   = staging.OfferDisplayCode\r\n      , FromSegment        = staging.FromSegment\r\n      , FromGroupSegment   = staging.FromGroupSegment\r\n      , FromMA             = staging.FromMA\r\n      , FromGroupMA        = staging.FromGroupMA\r\n      , ExpireAfterDays    = IIF(staging.ExpireAfterDays = '', NULL, CONVERT(INT, staging.ExpireAfterDays))\r\n      , Attribute1         = staging.Attribute1\r\n      , Attribute2         = staging.Attribute2\r\n      , Attribute3         = staging.Attribute3\r\n      , Attribute4         = staging.Attribute4\r\n      , Attribute5         = staging.Attribute5\r\n      , Attribute6         = staging.Attribute6\r\n      , Attribute7         = staging.Attribute7\r\n      , Attribute8         = staging.Attribute8\r\n      , Attribute9         = staging.Attribute9\r\n      , Attribute10        = staging.Attribute10\r\n      , Attribute11        = staging.Attribute11\r\n      , Attribute12        = staging.Attribute12\r\n      , Attribute13        = staging.Attribute13\r\n      , Attribute14        = staging.Attribute14\r\n      , Attribute15        = staging.Attribute15\r\n      , Attribute16        = staging.Attribute16\r\n      , Attribute17        = staging.Attribute17\r\n      , Attribute18        = staging.Attribute18\r\n      , Attribute19        = staging.Attribute19\r\n      , Attribute20        = staging.Attribute20\r\n      , OfferAutoLoad      = IIF(staging.OfferAutoLoad = '', NULL, CONVERT(BIT, staging.OfferAutoLoad))\r\n      , OfferValueMisc     = IIF(staging.OfferValueMisc = '', NULL, CONVERT(NUMERIC, staging.OfferValueMisc))\r\n    FROM offerExt main\r\n             JOIN [Sandbox-UnitedStaging].dbo.[StagingOfferExt_Delta] staging ON main.OfferId = staging.OfferId\r\n    WHERE Metadata$Action = 'INSERT';\r\n\r\n    INSERT INTO OfferExt ( OfferId, IsStackable, AvailableQuantity, UsedQuantity, DiscountType, MaxAllowedAmount\r\n                         , EffectiveStartDate, EffectiveEndDate, ApplyLimitByUser, CreatedDate, CreatedBy, ModifiedDate\r\n                         , ModifiedBy, IsDeleted, ApplyType, ConditionType, MinSubTotal, PercentageOff, SystemServices\r\n                         , CustomServices, Categories, Collections, Brands, MinConditionValue, ProductCodes\r\n                         , IsPostTaxDiscount, OfferUpc, OfferUpcType, OfferDisplayCode, FromSegment, FromGroupSegment\r\n                         , FromMA, FromGroupMA, ExpireAfterDays, Attribute1, Attribute2, Attribute3, Attribute4\r\n                         , Attribute5, Attribute6, Attribute7, Attribute8, Attribute9, Attribute10, Attribute11\r\n                         , Attribute12, Attribute13, Attribute14, Attribute15, Attribute16, Attribute17, Attribute18\r\n                         , Attribute19, Attribute20, OfferAutoLoad, OfferValueMisc)\r\n    SELECT OfferId\r\n         , IIF(IsStackable = '', NULL, CONVERT(BIT, IsStackable))\r\n         , IIF(AvailableQuantity = '', NULL, CONVERT(BIGINT, AvailableQuantity))\r\n         , IIF(UsedQuantity = '', NULL, CONVERT(BIGINT, UsedQuantity))\r\n         , IIF(DiscountType = '', NULL, CONVERT(SMALLINT, DiscountType))\r\n         , IIF(MaxAllowedAmount = '', NULL, CONVERT(DECIMAL(19, 10), MaxAllowedAmount))\r\n         , IIF(EffectiveStartDate = '', NULL, CONVERT(DATETIME, EffectiveStartDate))\r\n         , IIF(EffectiveEndDate = '', NULL, CONVERT(DATETIME, EffectiveEndDate))\r\n         , IIF(ApplyLimitByUser = '', NULL, CONVERT(INT, ApplyLimitByUser))\r\n         , IIF(CreatedDate = '', NULL, CONVERT(DATETIME, CreatedDate))\r\n         , CreatedBy\r\n         , IIF(ModifiedDate = '', NULL, CONVERT(DATETIME, ModifiedDate))\r\n         , ModifiedBy\r\n         , IIF(IsDeleted = '', NULL, CONVERT(BIT, IsDeleted))\r\n         , IIF(ApplyType = '', NULL, CONVERT(SMALLINT, ApplyType))\r\n         , IIF(ConditionType = '', NULL, CONVERT(SMALLINT, ConditionType))\r\n         , IIF(MinSubTotal = '', NULL, CONVERT(DECIMAL(19, 10), MinSubTotal))\r\n         , IIF(PercentageOff = '', NULL, CONVERT(FLOAT, PercentageOff))\r\n         , SystemServices\r\n         , CustomServices\r\n         , Categories\r\n         , Collections\r\n         , Brands\r\n         , IIF(MinConditionValue = '', NULL, CONVERT(DECIMAL(19, 10), MinConditionValue))\r\n         , ProductCodes\r\n         , IIF(IsPostTaxDiscount = '', NULL, CONVERT(BIT, IsPostTaxDiscount))\r\n         , OfferUpc\r\n         , IIF(OfferUpcType = '', NULL, CONVERT(SMALLINT, OfferUpcType))\r\n         , OfferDisplayCode\r\n         , FromSegment\r\n         , FromGroupSegment\r\n         , FromMA\r\n         , FromGroupMA\r\n         , IIF(ExpireAfterDays = '', NULL, CONVERT(INT, ExpireAfterDays))\r\n         , Attribute1\r\n         , Attribute2\r\n         , Attribute3\r\n         , Attribute4\r\n         , Attribute5\r\n         , Attribute6\r\n         , Attribute7\r\n         , Attribute8\r\n         , Attribute9\r\n         , Attribute10\r\n         , Attribute11\r\n         , Attribute12\r\n         , Attribute13\r\n         , Attribute14\r\n         , Attribute15\r\n         , Attribute16\r\n         , Attribute17\r\n         , Attribute18\r\n         , Attribute19\r\n         , Attribute20\r\n         , IIF(OfferAutoLoad = '', NULL, CONVERT(BIT, OfferAutoLoad))\r\n         , IIF(OfferValueMisc = '', NULL, CONVERT(NUMERIC, OfferValueMisc))\r\n    FROM [Sandbox-UnitedStaging].dbo.[StagingOfferExt_Delta] AS staging\r\n    WHERE Metadata$Action = 'INSERT'\r\n      AND NOT EXISTS(SELECT 1\r\n                     FROM OfferExt AS main\r\n                     WHERE main.OfferId = staging.OfferId);\r\n\r\n    COMMIT TRANSACTION;\r\nEND;\r\n\r\n---------------------------------------------------------------------------------------------------------\r\n-- Apply CDC on OfferStore\r\n---------------------------------------------------------------------------------------------------------\r\nBEGIN\r\n    BEGIN TRANSACTION;\r\n\r\n    DELETE OfferStore\r\n    FROM OfferStore main\r\n             JOIN [Sandbox-UnitedStaging].dbo.[StagingOfferStore_Delta] staging\r\n                  ON main.OfferId = staging.OfferId AND main.StoreCode = staging.StoreCode\r\n    WHERE Metadata$Action = 'DELETE'\r\n      AND Metadata$IsUpdate = 0;\r\n\r\n    INSERT INTO OfferStore (OfferId, StoreCode, CreatedDate, CreatedBy, ModifiedDate, ModifiedBy, IsDeleted)\r\n    SELECT OfferId\r\n         , StoreCode\r\n         , IIF(CreatedDate = '', NULL, CONVERT(DATETIME, CreatedDate))\r\n         , CreatedBy\r\n         , IIF(ModifiedDate = '', NULL, CONVERT(DATETIME, ModifiedDate))\r\n         , ModifiedBy\r\n         , IIF(IsDeleted = '', NULL, CONVERT(BIT, IsDeleted))\r\n    FROM [Sandbox-UnitedStaging].dbo.[StagingOfferStore_Delta] AS staging\r\n    WHERE Metadata$Action = 'INSERT'\r\n      AND Metadata$IsUpdate = 0\r\n      AND NOT EXISTS(SELECT 1\r\n                     FROM OfferStore AS main\r\n                     WHERE main.OfferId = staging.OfferId\r\n                       AND main.StoreCode = staging.StoreCode);\r\n\r\n    COMMIT TRANSACTION;\r\nEND;\r\n\r\n---------------------------------------------------------------------------------------------------------\r\n-- Apply CDC on OfferPromotion\r\n---------------------------------------------------------------------------------------------------------\r\nBEGIN\r\n    BEGIN TRANSACTION;\r\n\r\n    DELETE OfferPromotion\r\n    FROM offerpromotion main\r\n             JOIN [Sandbox-UnitedStaging].dbo.[StagingOfferPromotion_Delta] staging\r\n                  ON main.OfferId = staging.OfferId AND main.PromotionId = staging.PromotionId\r\n    WHERE Metadata$Action = 'DELETE'\r\n      AND Metadata$IsUpdate = 0;\r\n\r\n    INSERT INTO OfferPromotion (OfferId, PromotionId, CreatedBy)\r\n    SELECT OfferId\r\n         , PromotionId\r\n         , CreatedBy\r\n    FROM [Sandbox-UnitedStaging].dbo.[StagingOfferPromotion_Delta] AS staging\r\n    WHERE Metadata$Action = 'INSERT'\r\n      AND Metadata$IsUpdate = 0\r\n      AND NOT EXISTS(SELECT 1\r\n                     FROM OfferPromotion AS main\r\n                     WHERE main.OfferId = staging.OfferId\r\n                       AND main.PromotionId = staging.PromotionId);\r\n\r\n    COMMIT TRANSACTION;\r\nEND;\r\n\r\n---------------------------------------------------------------------------------------------------------\r\n-- Apply CDC on OfferProduct\r\n---------------------------------------------------------------------------------------------------------\r\nBEGIN\r\n    BEGIN TRANSACTION;\r\n\r\n    DELETE OfferProduct\r\n    FROM OfferProduct main\r\n             JOIN [Sandbox-UnitedStaging].dbo.[StagingOfferProduct_Delta] staging\r\n                  ON main.OfferId = staging.OfferId AND main.ProductCode = staging.ProductCode\r\n    WHERE Metadata$Action = 'DELETE'\r\n      AND Metadata$IsUpdate = 0;\r\n\r\n    INSERT INTO OfferProduct (OfferId, ProductCode, Name, CreatedDate, CreatedBy, ModifiedDate, ModifiedBy, IsDeleted)\r\n    SELECT OfferId\r\n         , ProductCode\r\n         , Name\r\n         , IIF(CreatedDate = '', NULL, CONVERT(DATETIME, CreatedDate))\r\n         , CreatedBy\r\n         , IIF(ModifiedDate = '', NULL, CONVERT(DATETIME, ModifiedDate))\r\n         , ModifiedBy\r\n         , IIF(IsDeleted = '', NULL, CONVERT(BIT, IsDeleted))\r\n    FROM [Sandbox-UnitedStaging].dbo.[StagingOfferProduct_Delta] AS staging\r\n    WHERE Metadata$Action = 'INSERT'\r\n      AND Metadata$IsUpdate = 0\r\n      AND NOT EXISTS(SELECT 1\r\n                     FROM OfferProduct AS main\r\n                     WHERE main.OfferId = staging.OfferId\r\n                       AND main.ProductCode = staging.ProductCode);\r\n\r\n    COMMIT TRANSACTION;\r\nEND;\r\n"}],"scriptBlockExecutionTimeout":"02:00:00"}},{"name":"Reset stage offer","type":"Script","dependsOn":[{"activity":"insert into main tables","dependencyConditions":["Succeeded"]}],"policy":{"timeout":"0.12:00:00","retry":0,"retryIntervalInSeconds":30,"secureOutput":false,"secureInput":false},"userProperties":[],"linkedServiceName":{"referenceName":"[parameters('Snowflake_SandboxUnited')]","type":"LinkedServiceReference"},"typeProperties":{"scripts":[{"type":"NonQuery","text":"UPDATE Rs_Schema.OfferProgramRuns\r\nSET StagingStatus = 0, \r\n    ModifiedDate = GetDate()\r\nWHERE status = 1;"}],"scriptBlockExecutionTimeout":"02:00:00"}},{"name":"sandboxunited_pipeline_Message_Notification_Failed_V1","type":"ExecutePipeline","dependsOn":[{"activity":"sandboxunited_pipeline_Message_Notification_Success_V1","dependencyConditions":["Skipped","Failed"]}],"userProperties":[],"typeProperties":{"pipeline":{"referenceName":"sandboxunited_pipeline_Message_Notification_Failed_V1","type":"PipelineReference"},"waitOnCompletion":true,"parameters":{}}},{"name":"sandboxunited_pipeline_Message_Notification_Success_V1","type":"ExecutePipeline","dependsOn":[{"activity":"Reset stage offer","dependencyConditions":["Succeeded"]}],"userProperties":[],"typeProperties":{"pipeline":{"referenceName":"sandboxunited_pipeline_Message_Notification_Success_V1","type":"PipelineReference"},"waitOnCompletion":true,"parameters":{}}},{"name":"Fail","type":"Fail","dependsOn":[{"activity":"sandboxunited_pipeline_Message_Notification_Failed_V1","dependencyConditions":["Succeeded"]}],"userProperties":[],"typeProperties":{"message":"step failed","errorCode":"112"}}],"policy":{"elapsedTimeMetric":{}},"variables":{"TransactionId":{"type":"String"}},"folder":{"name":"Sandbox United/Offer/Import_Offer"},"annotations":[],"lastPublishTime":"2023-04-12T09:45:56Z"},"dependsOn":["[concat(variables('factoryId'), '/datasets/SnowflakeTable_SandboxUnited_Offer_StagingOffer_Delta')]","[concat(variables('factoryId'), '/datasets/SqlServerTable_SandboxUnited_StagingOffer_StagingOfferDelta')]","[concat(variables('factoryId'), '/datasets/SnowflakeTable_SandboxUnited_Offer_StagingCampaign_Delta')]","[concat(variables('factoryId'), '/datasets/SqlServerTable_SandboxUnited_StagingOffer_StagingCampaign_Delta')]","[concat(variables('factoryId'), '/datasets/SnowflakeTable_SandboxUnited_Offer_StagingPromotion_Delta')]","[concat(variables('factoryId'), '/datasets/SqlServerTable_SandboxUnited_StagingOffer_StagingPromotionDelta')]","[concat(variables('factoryId'), '/datasets/SnowflakeTable_SandboxUnited_Offer_StagingProduct_Delta')]","[concat(variables('factoryId'), '/datasets/SqlServerTable_SandboxUnited_StagingOffer_StagingProductDelta')]","[concat(variables('factoryId'), '/datasets/SnowflakeTable_SandboxUnited_Offer_StagingOfferExt_Delta')]","[concat(variables('factoryId'), '/datasets/SqlServerTable_SandboxUnited_StagingOffer_StagingOfferExtDelta')]","[concat(variables('factoryId'), '/datasets/SnowflakeTable_SandboxUnited_Offer_StagingOfferStore_Delta')]","[concat(variables('factoryId'), '/datasets/SqlServerTable_SandboxUnited_StagingOffer_StagingOfferStoreDelta')]","[concat(variables('factoryId'), '/datasets/SnowflakeTable_SandboxUnited_Offer_StagingOfferPromotion_Delta')]","[concat(variables('factoryId'), '/datasets/SqlServerTable_SandboxUnited_StagingOffer_StagingOfferPromotionDelta')]","[concat(variables('factoryId'), '/datasets/SnowflakeTable_SandboxUnited_Offer_StagingOfferProduct_Delta')]","[concat(variables('factoryId'), '/datasets/SqlServerTable_SandboxUnited_StagingOffer_StagingOfferProductDelta')]","[concat(variables('factoryId'), '/pipelines/sandboxunited_pipeline_Message_Notification_Failed_V1')]","[concat(variables('factoryId'), '/pipelines/sandboxunited_pipeline_Message_Notification_Success_V1')]"]},{"name":"[concat(parameters('factoryName'), '/SnowflakeTable_SandboxUnited_Offer_StagingOffer_Delta')]","type":"Microsoft.DataFactory/factories/datasets","apiVersion":"2018-06-01","properties":{"linkedServiceName":{"referenceName":"[parameters('Snowflake_SandboxUnited')]","type":"LinkedServiceReference"},"folder":{"name":"Sandbox United/SandboxUnited_Offer"},"annotations":[],"type":"SnowflakeTable","schema":[{"name":"ID","type":"VARCHAR","precision":0,"scale":0},{"name":"NAME","type":"VARCHAR","precision":244,"scale":0},{"name":"DESCRIPTION","type":"VARCHAR","precision":232,"scale":0},{"name":"OFFERTYPE","type":"VARCHAR","precision":100,"scale":0},{"name":"OFFERCODE","type":"VARCHAR","precision":50,"scale":0},{"name":"PROMOTIONCODE","type":"VARCHAR","precision":50,"scale":0},{"name":"ISSTOREOFFER","type":"VARCHAR","precision":100,"scale":0},{"name":"ISONLINE","type":"VARCHAR","precision":100,"scale":0},{"name":"ISCARDREQUIRED","type":"VARCHAR","precision":100,"scale":0},{"name":"IMAGEURL","type":"VARCHAR","precision":160,"scale":0},{"name":"SALETYPE","type":"VARCHAR","precision":100,"scale":0},{"name":"ISCOMPLEX","type":"VARCHAR","precision":100,"scale":0},{"name":"ISMUSTBUY","type":"VARCHAR","precision":100,"scale":0},{"name":"OFFERSEGMENT","type":"VARCHAR","precision":100,"scale":0},{"name":"ISACTIVE","type":"VARCHAR","precision":100,"scale":0},{"name":"EXTRA","type":"VARCHAR","precision":0,"scale":0},{"name":"CREATEDDATE","type":"VARCHAR","precision":100,"scale":0},{"name":"CREATEDBY","type":"VARCHAR","scale":0},{"name":"MODIFIEDBY","type":"VARCHAR","scale":0},{"name":"ISDELETED","type":"VARCHAR","precision":100,"scale":0},{"name":"OLDID","type":"VARCHAR","scale":0},{"name":"FULLDESCRIPTION","type":"VARCHAR","precision":160,"scale":0},{"name":"STARTDATE","type":"VARCHAR","precision":100,"scale":0},{"name":"ENDDATE","type":"VARCHAR","precision":100,"scale":0},{"name":"SALETYPEDESCRIPTION","type":"VARCHAR","precision":0,"scale":0},{"name":"TITLEBEAUTYCOPY","type":"VARCHAR","precision":0,"scale":0},{"name":"DETAILSBEAUTYCOPY","type":"VARCHAR","precision":0,"scale":0},{"name":"DISCOUNTPRICING","type":"VARCHAR","precision":200,"scale":0},{"name":"SIZE","type":"VARCHAR","precision":200,"scale":0},{"name":"DISCLAIMER","type":"VARCHAR","precision":232,"scale":0},{"name":"HASHCOLUMN","type":"VARCHAR","precision":100,"scale":0},{"name":"MEMBERACCOUNT","type":"VARCHAR","precision":100,"scale":0},{"name":"PROVIDER","type":"VARCHAR","precision":100,"scale":0},{"name":"CUSTOMEROFFERFILEID","type":"VARCHAR","precision":100,"scale":0},{"name":"CUSTOMEROFFERFILESTATUS","type":"VARCHAR","precision":100,"scale":0},{"name":"MEMBERACCOUNTLOADQUANTITY","type":"VARCHAR","precision":100,"scale":0},{"name":"METADATA$ACTION","type":"VARCHAR","precision":50,"scale":0},{"name":"METADATA$ISUPDATE","type":"VARCHAR","precision":100,"scale":0},{"name":"METADATA$ROW_ID","type":"VARCHAR","precision":0,"scale":0},{"name":"TRANSACTIONID","type":"VARCHAR","precision":0,"scale":0}],"typeProperties":{"schema":"RS_SCHEMA","table":"STAGINGOFFER_DELTA"}},"dependsOn":[]},{"name":"[concat(parameters('factoryName'), '/SqlServerTable_SandboxUnited_StagingOffer_StagingOfferDelta')]","type":"Microsoft.DataFactory/factories/datasets","apiVersion":"2018-06-01","properties":{"linkedServiceName":{"referenceName":"[parameters('SqlServer_SandboxUnited_Staging')]","type":"LinkedServiceReference"},"folder":{"name":"Sandbox United/SandboxUnited_Offer"},"annotations":[],"type":"SqlServerTable","schema":[],"typeProperties":{"schema":"dbo","table":"StagingOffer_Delta"}},"dependsOn":[]},{"name":"[concat(parameters('factoryName'), '/SnowflakeTable_SandboxUnited_Offer_StagingCampaign_Delta')]","type":"Microsoft.DataFactory/factories/datasets","apiVersion":"2018-06-01","properties":{"linkedServiceName":{"referenceName":"[parameters('Snowflake_SandboxUnited')]","type":"LinkedServiceReference"},"folder":{"name":"Sandbox United/SandboxUnited_Offer"},"annotations":[],"type":"SnowflakeTable","schema":[{"name":"ID","type":"VARCHAR","precision":0,"scale":0},{"name":"NAME","type":"VARCHAR","precision":244,"scale":0},{"name":"DESCRIPTION","type":"VARCHAR","precision":232,"scale":0},{"name":"CAMPAIGNCODE","type":"VARCHAR","precision":50,"scale":0},{"name":"STARTDATE","type":"VARCHAR","precision":100,"scale":0},{"name":"ENDDATE","type":"VARCHAR","precision":100,"scale":0},{"name":"PRESTARTDATE","type":"VARCHAR","precision":100,"scale":0},{"name":"PREENDDATE","type":"VARCHAR","precision":100,"scale":0},{"name":"CREATEDDATE","type":"VARCHAR","precision":100,"scale":0},{"name":"CREATEDBY","type":"VARCHAR","scale":0},{"name":"MODIFIEDBY","type":"VARCHAR","scale":0},{"name":"ISDELETED","type":"VARCHAR","precision":100,"scale":0},{"name":"METADATA$ACTION","type":"VARCHAR","precision":50,"scale":0},{"name":"METADATA$ISUPDATE","type":"VARCHAR","precision":100,"scale":0},{"name":"METADATA$ROW_ID","type":"VARCHAR","precision":0,"scale":0},{"name":"TRANSACTIONID","type":"VARCHAR","precision":0,"scale":0}],"typeProperties":{"schema":"RS_SCHEMA","table":"STAGINGCAMPAIGN_DELTA"}},"dependsOn":[]},{"name":"[concat(parameters('factoryName'), '/SqlServerTable_SandboxUnited_StagingOffer_StagingCampaign_Delta')]","type":"Microsoft.DataFactory/factories/datasets","apiVersion":"2018-06-01","properties":{"linkedServiceName":{"referenceName":"[parameters('SqlServer_SandboxUnited_Staging')]","type":"LinkedServiceReference"},"folder":{"name":"Sandbox United/SandboxUnited_Offer"},"annotations":[],"type":"SqlServerTable","schema":[{"name":"Id","type":"uniqueidentifier"},{"name":"Name","type":"nvarchar"},{"name":"Description","type":"nvarchar"},{"name":"CampaignCode","type":"varchar"},{"name":"StartDate","type":"nvarchar"},{"name":"EndDate","type":"nvarchar"},{"name":"PreStartDate","type":"nvarchar"},{"name":"PreEndDate","type":"nvarchar"},{"name":"CreatedDate","type":"nvarchar"},{"name":"CreatedBy","type":"nvarchar"},{"name":"ModifiedDate","type":"nvarchar"},{"name":"ModifiedBy","type":"nvarchar"},{"name":"IsDeleted","type":"nvarchar"},{"name":"Metadata$Action","type":"nvarchar"},{"name":"Metadata$IsUpdate","type":"bit"}],"typeProperties":{"schema":"dbo","table":"StagingCampaign_Delta"}},"dependsOn":[]},{"name":"[concat(parameters('factoryName'), '/SnowflakeTable_SandboxUnited_Offer_StagingPromotion_Delta')]","type":"Microsoft.DataFactory/factories/datasets","apiVersion":"2018-06-01","properties":{"linkedServiceName":{"referenceName":"[parameters('Snowflake_SandboxUnited')]","type":"LinkedServiceReference"},"folder":{"name":"Sandbox United/SandboxUnited_Offer"},"annotations":[],"type":"SnowflakeTable","schema":[{"name":"ID","type":"VARCHAR","precision":0,"scale":0},{"name":"NAME","type":"VARCHAR","precision":244,"scale":0},{"name":"DESCRIPTION","type":"VARCHAR","precision":232,"scale":0},{"name":"PROMOTIONCODE","type":"VARCHAR","precision":50,"scale":0},{"name":"STARTDATE","type":"VARCHAR","precision":100,"scale":0},{"name":"ENDDATE","type":"VARCHAR","precision":100,"scale":0},{"name":"PRESTARTDATE","type":"VARCHAR","precision":100,"scale":0},{"name":"PREENDDATE","type":"VARCHAR","precision":100,"scale":0},{"name":"CAMPAIGNCODE","type":"VARCHAR","precision":50,"scale":0},{"name":"CAMPAIGNID","type":"VARCHAR","precision":0,"scale":0},{"name":"CREATEDDATE","type":"VARCHAR","precision":100,"scale":0},{"name":"CREATEDBY","type":"VARCHAR","scale":0},{"name":"MODIFIEDBY","type":"VARCHAR","scale":0},{"name":"ISDELETED","type":"VARCHAR","precision":100,"scale":0},{"name":"METADATA$ACTION","type":"VARCHAR","precision":50,"scale":0},{"name":"METADATA$ISUPDATE","type":"VARCHAR","precision":100,"scale":0},{"name":"METADATA$ROW_ID","type":"VARCHAR","precision":0,"scale":0},{"name":"TRANSACTIONID","type":"VARCHAR","precision":0,"scale":0}],"typeProperties":{"schema":"RS_SCHEMA","table":"STAGINGPROMOTION_DELTA"}},"dependsOn":[]},{"name":"[concat(parameters('factoryName'), '/SqlServerTable_SandboxUnited_StagingOffer_StagingPromotionDelta')]","type":"Microsoft.DataFactory/factories/datasets","apiVersion":"2018-06-01","properties":{"linkedServiceName":{"referenceName":"[parameters('SqlServer_SandboxUnited_Staging')]","type":"LinkedServiceReference"},"folder":{"name":"Sandbox United/SandboxUnited_Offer"},"annotations":[],"type":"SqlServerTable","schema":[{"name":"Id","type":"uniqueidentifier"},{"name":"Name","type":"nvarchar"},{"name":"Description","type":"nvarchar"},{"name":"PromotionCode","type":"varchar"},{"name":"StartDate","type":"nvarchar"},{"name":"EndDate","type":"nvarchar"},{"name":"PreStartDate","type":"nvarchar"},{"name":"PreEndDate","type":"nvarchar"},{"name":"CampaignCode","type":"varchar"},{"name":"CampaignId","type":"uniqueidentifier"},{"name":"CreatedDate","type":"nvarchar"},{"name":"CreatedBy","type":"nvarchar"},{"name":"ModifiedDate","type":"nvarchar"},{"name":"ModifiedBy","type":"nvarchar"},{"name":"IsDeleted","type":"nvarchar"},{"name":"Metadata$Action","type":"nvarchar"},{"name":"Metadata$IsUpdate","type":"bit"}],"typeProperties":{"schema":"dbo","table":"StagingPromotion_Delta"}},"dependsOn":[]},{"name":"[concat(parameters('factoryName'), '/SnowflakeTable_SandboxUnited_Offer_StagingProduct_Delta')]","type":"Microsoft.DataFactory/factories/datasets","apiVersion":"2018-06-01","properties":{"linkedServiceName":{"referenceName":"[parameters('Snowflake_SandboxUnited')]","type":"LinkedServiceReference"},"folder":{"name":"Sandbox United/SandboxUnited_Offer"},"annotations":[],"type":"SnowflakeTable","schema":[{"name":"ID","type":"VARCHAR","precision":0,"scale":0},{"name":"DESCRIPTION","type":"VARCHAR","precision":232,"scale":0},{"name":"FULLDESCRIPTION","type":"VARCHAR","precision":208,"scale":0},{"name":"MOVEMENT","type":"VARCHAR","precision":100,"scale":0},{"name":"DEPARTMENTCODE","type":"VARCHAR","precision":50,"scale":0},{"name":"DEPARTMENTNAME","type":"VARCHAR","precision":244,"scale":0},{"name":"PRODUCTCODE","type":"VARCHAR","precision":50,"scale":0},{"name":"DEPARTMENTCODE1","type":"VARCHAR","precision":50,"scale":0},{"name":"DEPARTMENTNAME1","type":"VARCHAR","precision":200,"scale":0},{"name":"DEPARTMENTCODE2","type":"VARCHAR","precision":50,"scale":0},{"name":"DEPARTMENTNAME2","type":"VARCHAR","precision":200,"scale":0},{"name":"DEPARTMENTCODE3","type":"VARCHAR","precision":50,"scale":0},{"name":"DEPARTMENTNAME3","type":"VARCHAR","precision":200,"scale":0},{"name":"ISDELETED","type":"VARCHAR","precision":100,"scale":0},{"name":"PRIMARYUPC","type":"VARCHAR","precision":20,"scale":0},{"name":"METADATA$ACTION","type":"VARCHAR","precision":50,"scale":0},{"name":"METADATA$ISUPDATE","type":"VARCHAR","precision":100,"scale":0},{"name":"METADATA$ROW_ID","type":"VARCHAR","precision":0,"scale":0},{"name":"TRANSACTIONID","type":"VARCHAR","precision":0,"scale":0}],"typeProperties":{"schema":"RS_SCHEMA","table":"STAGINGPRODUCT_DELTA"}},"dependsOn":[]},{"name":"[concat(parameters('factoryName'), '/SqlServerTable_SandboxUnited_StagingOffer_StagingProductDelta')]","type":"Microsoft.DataFactory/factories/datasets","apiVersion":"2018-06-01","properties":{"linkedServiceName":{"referenceName":"[parameters('SqlServer_SandboxUnited_Staging')]","type":"LinkedServiceReference"},"folder":{"name":"Sandbox United/SandboxUnited_Offer"},"annotations":[],"type":"SqlServerTable","schema":[{"name":"Id","type":"uniqueidentifier"},{"name":"Description","type":"nvarchar"},{"name":"FullDescription","type":"nvarchar"},{"name":"Movement","type":"nvarchar"},{"name":"DepartmentCode","type":"nvarchar"},{"name":"DepartmentName","type":"nvarchar"},{"name":"ProductCode","type":"nvarchar"},{"name":"DepartmentCode1","type":"nvarchar"},{"name":"DepartmentName1","type":"nvarchar"},{"name":"DepartmentCode2","type":"nvarchar"},{"name":"DepartmentName2","type":"nvarchar"},{"name":"DepartmentCode3","type":"nvarchar"},{"name":"DepartmentName3","type":"nvarchar"},{"name":"IsDeleted","type":"nvarchar"},{"name":"PrimaryUPC","type":"nvarchar"},{"name":"Metadata$Action","type":"nvarchar"},{"name":"Metadata$IsUpdate","type":"bit"}],"typeProperties":{"schema":"dbo","table":"StagingProduct_Delta"}},"dependsOn":[]},{"name":"[concat(parameters('factoryName'), '/SnowflakeTable_SandboxUnited_Offer_StagingOfferExt_Delta')]","type":"Microsoft.DataFactory/factories/datasets","apiVersion":"2018-06-01","properties":{"linkedServiceName":{"referenceName":"[parameters('Snowflake_SandboxUnited')]","type":"LinkedServiceReference"},"folder":{"name":"Sandbox United/SandboxUnited_Offer"},"annotations":[],"type":"SnowflakeTable","schema":[{"name":"OFFERID","type":"VARCHAR","precision":0,"scale":0},{"name":"ISSTACKABLE","type":"VARCHAR","precision":100,"scale":0},{"name":"AVAILABLEQUANTITY","type":"VARCHAR","precision":100,"scale":0},{"name":"USEDQUANTITY","type":"VARCHAR","precision":100,"scale":0},{"name":"DISCOUNTTYPE","type":"VARCHAR","precision":100,"scale":0},{"name":"MAXALLOWEDAMOUNT","type":"VARCHAR","precision":100,"scale":0},{"name":"EFFECTIVESTARTDATE","type":"VARCHAR","precision":100,"scale":0},{"name":"EFFECTIVEENDDATE","type":"VARCHAR","precision":100,"scale":0},{"name":"APPLYLIMITBYUSER","type":"VARCHAR","precision":100,"scale":0},{"name":"CREATEDDATE","type":"VARCHAR","precision":100,"scale":0},{"name":"CREATEDBY","type":"VARCHAR","scale":0},{"name":"MODIFIEDBY","type":"VARCHAR","scale":0},{"name":"ISDELETED","type":"VARCHAR","precision":100,"scale":0},{"name":"APPLYTYPE","type":"VARCHAR","precision":100,"scale":0},{"name":"CONDITIONTYPE","type":"VARCHAR","precision":100,"scale":0},{"name":"MINSUBTOTAL","type":"VARCHAR","precision":100,"scale":0},{"name":"PERCENTAGEOFF","type":"VARCHAR","precision":100,"scale":0},{"name":"SYSTEMSERVICES","type":"VARCHAR","scale":0},{"name":"CUSTOMSERVICES","type":"VARCHAR","scale":0},{"name":"CATEGORIES","type":"VARCHAR","scale":0},{"name":"COLLECTIONS","type":"VARCHAR","scale":0},{"name":"BRANDS","type":"VARCHAR","scale":0},{"name":"MINCONDITIONVALUE","type":"VARCHAR","precision":100,"scale":0},{"name":"PRODUCTCODES","type":"VARCHAR","precision":208,"scale":0},{"name":"ISPOSTTAXDISCOUNT","type":"VARCHAR","precision":100,"scale":0},{"name":"OFFERUPC","type":"VARCHAR","precision":16,"scale":0},{"name":"OFFERUPCTYPE","type":"VARCHAR","precision":100,"scale":0},{"name":"OFFERDISPLAYCODE","type":"VARCHAR","precision":50,"scale":0},{"name":"FROMSEGMENT","type":"VARCHAR","precision":20,"scale":0},{"name":"FROMGROUPSEGMENT","type":"VARCHAR","precision":20,"scale":0},{"name":"FROMMA","type":"VARCHAR","precision":20,"scale":0},{"name":"FROMGROUPMA","type":"VARCHAR","precision":20,"scale":0},{"name":"EXPIREAFTERDAYS","type":"VARCHAR","precision":100,"scale":0},{"name":"ATTRIBUTE1","type":"VARCHAR","precision":200,"scale":0},{"name":"ATTRIBUTE2","type":"VARCHAR","precision":200,"scale":0},{"name":"ATTRIBUTE3","type":"VARCHAR","precision":200,"scale":0},{"name":"ATTRIBUTE4","type":"VARCHAR","precision":200,"scale":0},{"name":"ATTRIBUTE5","type":"VARCHAR","precision":200,"scale":0},{"name":"ATTRIBUTE6","type":"VARCHAR","precision":200,"scale":0},{"name":"ATTRIBUTE7","type":"VARCHAR","precision":200,"scale":0},{"name":"ATTRIBUTE8","type":"VARCHAR","precision":200,"scale":0},{"name":"ATTRIBUTE9","type":"VARCHAR","precision":200,"scale":0},{"name":"ATTRIBUTE10","type":"VARCHAR","precision":200,"scale":0},{"name":"ATTRIBUTE11","type":"VARCHAR","precision":200,"scale":0},{"name":"ATTRIBUTE12","type":"VARCHAR","precision":200,"scale":0},{"name":"ATTRIBUTE13","type":"VARCHAR","precision":200,"scale":0},{"name":"ATTRIBUTE14","type":"VARCHAR","precision":200,"scale":0},{"name":"ATTRIBUTE15","type":"VARCHAR","precision":200,"scale":0},{"name":"ATTRIBUTE16","type":"VARCHAR","precision":200,"scale":0},{"name":"ATTRIBUTE17","type":"VARCHAR","precision":200,"scale":0},{"name":"ATTRIBUTE18","type":"VARCHAR","precision":200,"scale":0},{"name":"ATTRIBUTE19","type":"VARCHAR","precision":200,"scale":0},{"name":"ATTRIBUTE20","type":"VARCHAR","precision":200,"scale":0},{"name":"OFFERAUTOLOAD","type":"VARCHAR","precision":100,"scale":0},{"name":"OFFERVALUEMISC","type":"VARCHAR","precision":100,"scale":0},{"name":"METADATA$ACTION","type":"VARCHAR","precision":50,"scale":0},{"name":"METADATA$ISUPDATE","type":"VARCHAR","precision":100,"scale":0},{"name":"METADATA$ROW_ID","type":"VARCHAR","precision":0,"scale":0},{"name":"TRANSACTIONID","type":"VARCHAR","precision":0,"scale":0}],"typeProperties":{"schema":"RS_SCHEMA","table":"STAGINGOFFEREXT_DELTA"}},"dependsOn":[]},{"name":"[concat(parameters('factoryName'), '/SqlServerTable_SandboxUnited_StagingOffer_StagingOfferExtDelta')]","type":"Microsoft.DataFactory/factories/datasets","apiVersion":"2018-06-01","properties":{"linkedServiceName":{"referenceName":"[parameters('SqlServer_SandboxUnited_Staging')]","type":"LinkedServiceReference"},"folder":{"name":"Sandbox United/SandboxUnited_Offer"},"annotations":[],"type":"SqlServerTable","schema":[{"name":"OfferId","type":"uniqueidentifier"},{"name":"IsStackable","type":"nvarchar"},{"name":"AvailableQuantity","type":"nvarchar"},{"name":"UsedQuantity","type":"nvarchar"},{"name":"DiscountType","type":"nvarchar"},{"name":"MaxAllowedAmount","type":"nvarchar"},{"name":"EffectiveStartDate","type":"nvarchar"},{"name":"EffectiveEndDate","type":"nvarchar"},{"name":"ApplyLimitByUser","type":"nvarchar"},{"name":"CreatedDate","type":"nvarchar"},{"name":"CreatedBy","type":"nvarchar"},{"name":"ModifiedDate","type":"nvarchar"},{"name":"ModifiedBy","type":"nvarchar"},{"name":"IsDeleted","type":"nvarchar"},{"name":"ApplyType","type":"nvarchar"},{"name":"ConditionType","type":"nvarchar"},{"name":"MinSubTotal","type":"nvarchar"},{"name":"PercentageOff","type":"nvarchar"},{"name":"SystemServices","type":"varchar"},{"name":"CustomServices","type":"varchar"},{"name":"Categories","type":"varchar"},{"name":"Collections","type":"varchar"},{"name":"Brands","type":"varchar"},{"name":"MinConditionValue","type":"nvarchar"},{"name":"ProductCodes","type":"varchar"},{"name":"IsPostTaxDiscount","type":"nvarchar"},{"name":"OfferUpc","type":"varchar"},{"name":"OfferUpcType","type":"nvarchar"},{"name":"OfferDisplayCode","type":"nvarchar"},{"name":"FromSegment","type":"nvarchar"},{"name":"FromGroupSegment","type":"nvarchar"},{"name":"FromMA","type":"nvarchar"},{"name":"FromGroupMA","type":"nvarchar"},{"name":"ExpireAfterDays","type":"nvarchar"},{"name":"Attribute1","type":"nvarchar"},{"name":"Attribute2","type":"nvarchar"},{"name":"Attribute3","type":"nvarchar"},{"name":"Attribute4","type":"nvarchar"},{"name":"Attribute5","type":"nvarchar"},{"name":"Attribute6","type":"nvarchar"},{"name":"Attribute7","type":"nvarchar"},{"name":"Attribute8","type":"nvarchar"},{"name":"Attribute9","type":"nvarchar"},{"name":"Attribute10","type":"nvarchar"},{"name":"Attribute11","type":"nvarchar"},{"name":"Attribute12","type":"nvarchar"},{"name":"Attribute13","type":"nvarchar"},{"name":"Attribute14","type":"nvarchar"},{"name":"Attribute15","type":"nvarchar"},{"name":"Attribute16","type":"nvarchar"},{"name":"Attribute17","type":"nvarchar"},{"name":"Attribute18","type":"nvarchar"},{"name":"Attribute19","type":"nvarchar"},{"name":"Attribute20","type":"nvarchar"},{"name":"OfferAutoLoad","type":"nvarchar"},{"name":"OfferValueMisc","type":"nvarchar"},{"name":"Metadata$Action","type":"nvarchar"},{"name":"Metadata$IsUpdate","type":"bit"}],"typeProperties":{"schema":"dbo","table":"StagingOfferExt_Delta"}},"dependsOn":[]},{"name":"[concat(parameters('factoryName'), '/SnowflakeTable_SandboxUnited_Offer_StagingOfferStore_Delta')]","type":"Microsoft.DataFactory/factories/datasets","apiVersion":"2018-06-01","properties":{"linkedServiceName":{"referenceName":"[parameters('Snowflake_SandboxUnited')]","type":"LinkedServiceReference"},"folder":{"name":"Sandbox United/SandboxUnited_Offer"},"annotations":[],"type":"SnowflakeTable","schema":[{"name":"OFFERID","type":"VARCHAR","precision":0,"scale":0},{"name":"STORECODE","type":"VARCHAR","precision":20,"scale":0},{"name":"CREATEDDATE","type":"VARCHAR","precision":100,"scale":0},{"name":"CREATEDBY","type":"VARCHAR","scale":0},{"name":"MODIFIEDBY","type":"VARCHAR","scale":0},{"name":"ISDELETED","type":"VARCHAR","precision":100,"scale":0},{"name":"METADATA$ACTION","type":"VARCHAR","precision":50,"scale":0},{"name":"METADATA$ISUPDATE","type":"VARCHAR","precision":100,"scale":0},{"name":"METADATA$ROW_ID","type":"VARCHAR","precision":0,"scale":0},{"name":"TRANSACTIONID","type":"VARCHAR","precision":0,"scale":0}],"typeProperties":{"schema":"RS_SCHEMA","table":"STAGINGOFFERSTORE_DELTA"}},"dependsOn":[]},{"name":"[concat(parameters('factoryName'), '/SqlServerTable_SandboxUnited_StagingOffer_StagingOfferStoreDelta')]","type":"Microsoft.DataFactory/factories/datasets","apiVersion":"2018-06-01","properties":{"linkedServiceName":{"referenceName":"[parameters('SqlServer_SandboxUnited_Staging')]","type":"LinkedServiceReference"},"folder":{"name":"Sandbox United/SandboxUnited_Offer"},"annotations":[],"type":"SqlServerTable","schema":[{"name":"OfferId","type":"uniqueidentifier"},{"name":"StoreCode","type":"varchar"},{"name":"CreatedDate","type":"nvarchar"},{"name":"CreatedBy","type":"nvarchar"},{"name":"ModifiedDate","type":"nvarchar"},{"name":"ModifiedBy","type":"nvarchar"},{"name":"IsDeleted","type":"nvarchar"},{"name":"Metadata$Action","type":"nvarchar"},{"name":"Metadata$IsUpdate","type":"bit"}],"typeProperties":{"schema":"dbo","table":"StagingOfferStore_Delta"}},"dependsOn":[]},{"name":"[concat(parameters('factoryName'), '/SnowflakeTable_SandboxUnited_Offer_StagingOfferPromotion_Delta')]","type":"Microsoft.DataFactory/factories/datasets","apiVersion":"2018-06-01","properties":{"linkedServiceName":{"referenceName":"[parameters('Snowflake_SandboxUnited')]","type":"LinkedServiceReference"},"folder":{"name":"Sandbox United/SandboxUnited_Offer"},"annotations":[],"type":"SnowflakeTable","schema":[{"name":"OFFERID","type":"VARCHAR","precision":0,"scale":0},{"name":"PROMOTIONID","type":"VARCHAR","precision":0,"scale":0},{"name":"CREATEDBY","type":"VARCHAR","scale":0},{"name":"METADATA$ACTION","type":"VARCHAR","precision":50,"scale":0},{"name":"METADATA$ISUPDATE","type":"VARCHAR","precision":100,"scale":0},{"name":"METADATA$ROW_ID","type":"VARCHAR","precision":0,"scale":0},{"name":"TRANSACTIONID","type":"VARCHAR","precision":0,"scale":0}],"typeProperties":{"schema":"RS_SCHEMA","table":"STAGINGOFFERPROMOTION_DELTA"}},"dependsOn":[]},{"name":"[concat(parameters('factoryName'), '/SqlServerTable_SandboxUnited_StagingOffer_StagingOfferPromotionDelta')]","type":"Microsoft.DataFactory/factories/datasets","apiVersion":"2018-06-01","properties":{"linkedServiceName":{"referenceName":"[parameters('SqlServer_SandboxUnited_Staging')]","type":"LinkedServiceReference"},"folder":{"name":"Sandbox United/SandboxUnited_Offer"},"annotations":[],"type":"SqlServerTable","schema":[{"name":"OfferId","type":"uniqueidentifier"},{"name":"PromotionId","type":"uniqueidentifier"},{"name":"CreatedBy","type":"nvarchar"},{"name":"Metadata$Action","type":"nvarchar"},{"name":"Metadata$IsUpdate","type":"bit"}],"typeProperties":{"schema":"dbo","table":"StagingOfferPromotion_Delta"}},"dependsOn":[]},{"name":"[concat(parameters('factoryName'), '/SnowflakeTable_SandboxUnited_Offer_StagingOfferProduct_Delta')]","type":"Microsoft.DataFactory/factories/datasets","apiVersion":"2018-06-01","properties":{"linkedServiceName":{"referenceName":"[parameters('Snowflake_SandboxUnited')]","type":"LinkedServiceReference"},"folder":{"name":"Sandbox United/SandboxUnited_Offer"},"annotations":[],"type":"SnowflakeTable","schema":[{"name":"OFFERID","type":"VARCHAR","precision":0,"scale":0},{"name":"PRODUCTCODE","type":"VARCHAR","precision":250,"scale":0},{"name":"NAME","type":"VARCHAR","precision":244,"scale":0},{"name":"CREATEDDATE","type":"VARCHAR","precision":100,"scale":0},{"name":"CREATEDBY","type":"VARCHAR","scale":0},{"name":"MODIFIEDBY","type":"VARCHAR","scale":0},{"name":"ISDELETED","type":"VARCHAR","precision":100,"scale":0},{"name":"METADATA$ACTION","type":"VARCHAR","precision":50,"scale":0},{"name":"METADATA$ISUPDATE","type":"VARCHAR","precision":100,"scale":0},{"name":"METADATA$ROW_ID","type":"VARCHAR","precision":0,"scale":0},{"name":"TRANSACTIONID","type":"VARCHAR","precision":0,"scale":0}],"typeProperties":{"schema":"RS_SCHEMA","table":"STAGINGOFFERPRODUCT_DELTA"}},"dependsOn":[]},{"name":"[concat(parameters('factoryName'), '/SqlServerTable_SandboxUnited_StagingOffer_StagingOfferProductDelta')]","type":"Microsoft.DataFactory/factories/datasets","apiVersion":"2018-06-01","properties":{"linkedServiceName":{"referenceName":"[parameters('SqlServer_SandboxUnited_Staging')]","type":"LinkedServiceReference"},"folder":{"name":"Sandbox United/SandboxUnited_Offer"},"annotations":[],"type":"SqlServerTable","schema":[{"name":"OfferId","type":"uniqueidentifier"},{"name":"ProductCode","type":"varchar"},{"name":"Name","type":"varchar"},{"name":"CreatedDate","type":"nvarchar"},{"name":"CreatedBy","type":"nvarchar"},{"name":"ModifiedDate","type":"nvarchar"},{"name":"ModifiedBy","type":"nvarchar"},{"name":"IsDeleted","type":"nvarchar"},{"name":"Metadata$Action","type":"nvarchar"},{"name":"Metadata$IsUpdate","type":"bit"}],"typeProperties":{"schema":"dbo","table":"StagingOfferProduct_Delta"}},"dependsOn":[]}]}